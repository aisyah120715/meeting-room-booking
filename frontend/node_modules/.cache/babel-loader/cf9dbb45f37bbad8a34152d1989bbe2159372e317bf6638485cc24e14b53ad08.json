{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ecah1\\\\meeting-room-booking\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios'; // Assuming you use axios for API calls\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize user from localStorage or null if not found\n  const [user, setUser] = useState(() => {\n    try {\n      const storedUser = localStorage.getItem('user');\n      return storedUser ? JSON.parse(storedUser) : null;\n    } catch (error) {\n      console.error(\"Failed to parse user from localStorage\", error);\n      return null;\n    }\n  });\n  const [loadingAuth, setLoadingAuth] = useState(true); // New state to indicate auth loading\n\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      const token = localStorage.getItem('authToken');\n      if (token && !user) {\n        // If a token exists but user isn't in state (e.g., after refresh),\n        // try to fetch user details to re-hydrate the state.\n        try {\n          // Adjust this API endpoint to your user details endpoint\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/auth/me`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          const fetchedUser = response.data.user; // Adjust based on your API response structure\n          setUser(fetchedUser);\n          localStorage.setItem('user', JSON.stringify(fetchedUser));\n        } catch (error) {\n          console.error(\"Failed to fetch user data with token\", error);\n          // If token is invalid or fetching fails, clear it\n          localStorage.removeItem('authToken');\n          localStorage.removeItem('user');\n          setUser(null);\n        }\n      }\n      setLoadingAuth(false); // Auth loading is complete\n    };\n    checkAuthStatus();\n  }, []); // Run once on mount\n\n  // Whenever the user state changes, update localStorage\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user');\n    }\n  }, [user]);\n  const login = (userData, token) => {\n    setUser(userData);\n    localStorage.setItem('authToken', token); // Store token\n    localStorage.setItem('user', JSON.stringify(userData)); // Store user data\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser: login,\n      logout,\n      loadingAuth\n    },\n    children: [\" \", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"fKS7b+ToANsscavjCauMEnaHuAg=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","error","console","loadingAuth","setLoadingAuth","checkAuthStatus","token","response","get","process","env","REACT_APP_API_URL","headers","Authorization","fetchedUser","data","setItem","stringify","removeItem","login","userData","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/ecah1/meeting-room-booking/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios'; // Assuming you use axios for API calls\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  // Initialize user from localStorage or null if not found\r\n  const [user, setUser] = useState(() => {\r\n    try {\r\n      const storedUser = localStorage.getItem('user');\r\n      return storedUser ? JSON.parse(storedUser) : null;\r\n    } catch (error) {\r\n      console.error(\"Failed to parse user from localStorage\", error);\r\n      return null;\r\n    }\r\n  });\r\n  const [loadingAuth, setLoadingAuth] = useState(true); // New state to indicate auth loading\r\n\r\n  useEffect(() => {\r\n    const checkAuthStatus = async () => {\r\n      const token = localStorage.getItem('authToken');\r\n      if (token && !user) {\r\n        // If a token exists but user isn't in state (e.g., after refresh),\r\n        // try to fetch user details to re-hydrate the state.\r\n        try {\r\n          // Adjust this API endpoint to your user details endpoint\r\n          const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/auth/me`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          const fetchedUser = response.data.user; // Adjust based on your API response structure\r\n          setUser(fetchedUser);\r\n          localStorage.setItem('user', JSON.stringify(fetchedUser));\r\n        } catch (error) {\r\n          console.error(\"Failed to fetch user data with token\", error);\r\n          // If token is invalid or fetching fails, clear it\r\n          localStorage.removeItem('authToken');\r\n          localStorage.removeItem('user');\r\n          setUser(null);\r\n        }\r\n      }\r\n      setLoadingAuth(false); // Auth loading is complete\r\n    };\r\n\r\n    checkAuthStatus();\r\n  }, []); // Run once on mount\r\n\r\n  // Whenever the user state changes, update localStorage\r\n  useEffect(() => {\r\n    if (user) {\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n    } else {\r\n      localStorage.removeItem('user');\r\n    }\r\n  }, [user]);\r\n\r\n  const login = (userData, token) => {\r\n    setUser(userData);\r\n    localStorage.setItem('authToken', token); // Store token\r\n    localStorage.setItem('user', JSON.stringify(userData)); // Store user data\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser: login, logout, loadingAuth }}> {/* Expose loadingAuth */}\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}