{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ecah1\\\\meeting-room-booking\\\\frontend\\\\src\\\\pages\\\\MyBookings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport { FiCalendar, FiBookOpen, FiHome, FiLogOut, FiUser, FiClock, FiCheckCircle, FiX, FiEdit2, FiChevronRight, FiPlus } from \"react-icons/fi\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Standard business hours (ensure these match your backend's format or are convertible)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HOURS = [\"8:00am\", \"9:00am\", \"10:00am\", \"11:00am\", \"12:00pm\", \"1:00pm\", \"2:00pm\", \"3:00pm\", \"4:00pm\"];\nexport default function MyBookings() {\n  _s();\n  const {\n    user,\n    logout,\n    loadingAuth\n  } = useAuth();\n  const [bookings, setBookings] = useState([]);\n  const [upcomingBookings, setUpcomingBookings] = useState([]);\n  const [pastBookings, setPastBookings] = useState([]);\n  const [statusMsg, setStatusMsg] = useState(\"\");\n  const [statusType, setStatusType] = useState(\"\"); // \"success\" | \"error\"\n  const [editingId, setEditingId] = useState(null);\n  const [newStartTime, setNewStartTime] = useState(\"\");\n  const [newEndTime, setNewEndTime] = useState(\"\");\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [selectedBooking, setSelectedBooking] = useState(null);\n  const [isLoadingSlots, setIsLoadingSlots] = useState(false);\n  const [slotError, setSlotError] = useState(null);\n  const [isLoadingBookings, setIsLoadingBookings] = useState(true);\n  const navigate = useNavigate();\n  const API_URL = process.env.REACT_APP_API_URL;\n\n  // --- Helper Functions (Memoized with useCallback) ---\n\n  // Helper to convert 'HH:MM AM/PM' to 'HH:MM:00' (24-hour) for internal Date constructor use\n  const timeAmPmTo24hrISO = useCallback(timeAmPm => {\n    if (!timeAmPm) return \"00:00:00\";\n    const cleanedTime = timeAmPm.toLowerCase().replace(/\\s/g, '');\n    const [time, period] = cleanedTime.split(/(am|pm)/);\n    let [hours, minutes] = time.split(\":\").map(Number);\n    if (period === \"pm\" && hours !== 12) {\n      hours += 12;\n    } else if (period === \"am\" && hours === 12) {\n      hours = 0;\n    }\n    return `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(2, \"0\")}:00`;\n  }, []);\n\n  // Helper to convert DB's 24-hour time ('HH:MM:SS' or 'HH:MM') to 'HH:MM' for Date constructor\n  const time24hrToIso = useCallback(time24hr => {\n    if (!time24hr) return \"00:00\";\n    return time24hr.slice(0, 5); // Take first 5 chars \"HH:MM\"\n  }, []);\n\n  // This function converts DB's 24-hour time ('HH:MM:SS' or 'HH:MM') to your display format (e.g., \"8:00am\")\n  const formatTimeForDisplay = useCallback(time24 => {\n    if (!time24) return \"\";\n    const [hourStr, minuteStr] = time24.split(\":\");\n    let hour = parseInt(hourStr, 10);\n    const period = hour >= 12 ? \"pm\" : \"am\";\n    hour = hour % 12;\n    hour = hour === 0 ? 12 : hour; // Convert 0 (midnight) to 12 AM\n    return `${hour}:${minuteStr}${period}`;\n  }, []);\n\n  // This function formats date from ISO string to display (e.g., \"Sat, Jun 22\")\n  const formatDate = useCallback(isoDate => {\n    if (!isoDate) return \"Invalid Date\";\n    const date = new Date(isoDate);\n    if (isNaN(date.getTime())) return \"Invalid Date\";\n    const options = {\n      weekday: \"short\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    return date.toLocaleDateString(\"en-US\", options);\n  }, []);\n\n  // This function converts your 'hours' array time (e.g., '8:00am') to numerical minutes for comparison\n  const timeToMinutes = useCallback(timeStr => {\n    if (!timeStr) return 0;\n    const cleanedTime = timeStr.toLowerCase().replace(/\\s/g, '');\n    const timePart = cleanedTime.split(/(am|pm)/)[0];\n    const period = cleanedTime.includes(\"pm\") ? \"pm\" : \"am\";\n    let [hours, minutes] = timePart.split(\":\").map(Number);\n    let total = hours * 60 + minutes;\n    if (period === \"pm\" && hours !== 12) total += 12 * 60;\n    if (period === \"am\" && hours === 12) total -= 12 * 60;\n    return total;\n  }, []);\n\n  // --- Fetching Data ---\n\n  const fetchBookings = useCallback(async () => {\n    if (loadingAuth || !(user !== null && user !== void 0 && user.email)) {\n      setIsLoadingBookings(false);\n      return;\n    }\n    setIsLoadingBookings(true);\n    setStatusMsg(\"\");\n    setStatusType(\"\"); // Clear status messages\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        throw new Error(\"Authentication token not found.\");\n      }\n      const response = await axios.get(`${API_URL}/api/booking/user-bookings?email=${user.email}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const allBookings = response.data;\n      const now = new Date(); // Current date and time\n      // Get today's date, normalized to midnight (00:00:00) for comparison\n      // This will set it to today's date, 12:00:00 AM in the client's local timezone\n      const todayMidnight = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      const upcoming = [];\n      const past = [];\n      allBookings.forEach(booking => {\n        // Parse booking date to a Date object, also normalized to midnight\n        // Use a date string that Date constructor can parse consistently to midnight\n        const bookingDate = new Date(booking.date + 'T00:00:00'); // Forces date to be at midnight for comparison\n\n        if (isNaN(bookingDate.getTime())) {\n          console.warn(\"Invalid booking date encountered:\", booking);\n          past.push(booking); // Fallback to past if date is invalid\n          return;\n        }\n\n        // --- CLASSIFICATION LOGIC (CHANGED HERE) ---\n        // Option 3: Classify by Date only. All of today's bookings are 'upcoming'.\n        if (bookingDate.getTime() >= todayMidnight.getTime()) {\n          upcoming.push(booking);\n        } else {\n          past.push(booking);\n        }\n        // --- END CLASSIFICATION LOGIC ---\n      });\n\n      // Sort upcoming by earliest start time first\n      upcoming.sort((a, b) => {\n        const dateA = new Date(`${a.date}T${time24hrToIso(a.time)}`);\n        const dateB = new Date(`${b.date}T${time24hrToIso(b.time)}`);\n        if (isNaN(dateA.getTime()) || isNaN(dateB.getTime())) return 0;\n        return dateA.getTime() - dateB.getTime();\n      });\n\n      // Sort past by latest start time first\n      past.sort((a, b) => {\n        const dateA = new Date(`${a.date}T${time24hrToIso(a.time)}`);\n        const dateB = new Date(`${b.date}T${time24hrToIso(b.time)}`);\n        if (isNaN(dateA.getTime()) || isNaN(dateB.getTime())) return 0;\n        return dateB.getTime() - dateA.getTime();\n      });\n      setBookings(allBookings); // Keep all for `isRangeBooked` conflicts\n      setUpcomingBookings(upcoming);\n      setPastBookings(past);\n      setStatusType(\"\");\n      setStatusMsg(\"\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Failed to load bookings:\", error);\n      setStatusType(\"error\");\n      setStatusMsg(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to load bookings.\");\n      if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n        logout();\n        navigate(\"/login\");\n      }\n    } finally {\n      setIsLoadingBookings(false);\n    }\n  }, [user, loadingAuth, logout, navigate, time24hrToIso]); // Dependencies for useCallback\n\n  const fetchBookedSlots = useCallback(async (date, room) => {\n    setIsLoadingSlots(true);\n    setSlotError(null);\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const res = await axios.get(`${API_URL}/api/booking/slots?date=${date}&room=${room}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setBookedSlots(res.data);\n    } catch (error) {\n      console.error(\"Failed to load booked time slots:\", error);\n      setBookedSlots([]);\n      setSlotError(\"Failed to load booked time slots.\");\n    } finally {\n      setIsLoadingSlots(false);\n    }\n  }, [API_URL]); // Dependencies for useCallback\n\n  useEffect(() => {\n    if (!loadingAuth && user !== null && user !== void 0 && user.email) {\n      fetchBookings();\n    } else if (!loadingAuth && !user) {\n      setIsLoadingBookings(false);\n    }\n  }, [loadingAuth, user, fetchBookings]);\n\n  // --- Handlers ---\n\n  const handleCancel = useCallback(async id => {\n    setStatusMsg(\"\");\n    setStatusType(\"\");\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      await axios.post(`${API_URL}/api/booking/cancel`, {\n        id,\n        email: user.email\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setStatusType(\"success\");\n      setStatusMsg(\"Booking cancelled successfully!\");\n      fetchBookings();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Failed to cancel booking:\", error);\n      setStatusType(\"error\");\n      setStatusMsg(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Failed to cancel booking.\");\n    }\n  }, [user, API_URL, fetchBookings]);\n  const handleEdit = useCallback(booking => {\n    setNewStartTime(\"\");\n    setNewEndTime(\"\");\n    setStatusMsg(\"\");\n    setStatusType(\"\");\n    const bookingEndDateTime = new Date(`${booking.date}T${time24hrToIso(booking.end_time)}`);\n    const now = new Date();\n    if (isNaN(bookingEndDateTime.getTime())) {\n      setStatusType(\"error\");\n      setStatusMsg(\"Invalid booking date/time. Cannot edit.\");\n      return;\n    }\n    // Check if the booking has already fully ended\n    if (bookingEndDateTime <= now) {\n      setStatusType(\"error\");\n      setStatusMsg(\"Past bookings cannot be edited.\");\n      return;\n    }\n    if (booking.status === \"approved\") {\n      setStatusType(\"error\");\n      setStatusMsg(\"Approved bookings cannot be edited.\");\n      return;\n    }\n    if (booking.status === \"cancelled\") {\n      setStatusType(\"error\");\n      setStatusMsg(\"Cancelled bookings cannot be edited.\");\n      return;\n    }\n    setEditingId(booking.id);\n    setNewStartTime(formatTimeForDisplay(booking.time));\n    setNewEndTime(formatTimeForDisplay(booking.end_time));\n    setSelectedBooking(booking);\n    fetchBookedSlots(booking.date, booking.room);\n  }, [fetchBookedSlots, formatTimeForDisplay, time24hrToIso]);\n\n  // isRangeBooked: Checks for conflicts with *all* other bookings for the same room and date\n  // (both the user's other bookings and general booked slots from backend)\n  const isRangeBooked = useCallback((start, end, currentBookingId) => {\n    const startIndex = HOURS.indexOf(start);\n    const endIndex = HOURS.indexOf(end);\n    if (startIndex === -1 || endIndex === -1 || startIndex >= endIndex) {\n      return true; // Invalid range implies a conflict\n    }\n\n    // Slots requested by the user, exclusive of the end time slot itself\n    const newRequestedSlots = HOURS.slice(startIndex, endIndex);\n\n    // Filter `bookings` to only include relevant conflicts (same room, same date, not the current booking, not cancelled)\n    const relevantBookings = bookings.filter(b => b.room === (selectedBooking === null || selectedBooking === void 0 ? void 0 : selectedBooking.room) && b.date === (selectedBooking === null || selectedBooking === void 0 ? void 0 : selectedBooking.date) && b.id !== currentBookingId &&\n    // Exclude the current booking being edited\n    b.status !== \"cancelled\" // Ignore cancelled bookings\n    );\n\n    // Check for conflicts with other bookings\n    const conflictFound = relevantBookings.some(existingBooking => {\n      const existingStartTimeDisplay = formatTimeForDisplay(existingBooking.time);\n      const existingEndTimeDisplay = formatTimeForDisplay(existingBooking.end_time);\n      const existingStartIndex = HOURS.indexOf(existingStartTimeDisplay);\n      const existingEndIndex = HOURS.indexOf(existingEndTimeDisplay);\n      if (existingStartIndex === -1 || existingEndIndex === -1 || existingStartIndex >= existingEndIndex) {\n        console.warn(\"Invalid existing booking time format, skipping conflict check for this booking:\", existingBooking);\n        return false;\n      }\n      const existingOccupiedSlots = HOURS.slice(existingStartIndex, existingEndIndex);\n\n      // Check for overlap: does any requested slot exist in existing occupied slots?\n      return newRequestedSlots.some(slot => existingOccupiedSlots.includes(slot));\n    });\n\n    // Additionally, check for conflicts with general booked slots from the backend (if any that are not user's current original booking)\n    const originalBookingStartIndex = HOURS.indexOf(formatTimeForDisplay(selectedBooking.time));\n    const originalBookingEndIndex = HOURS.indexOf(formatTimeForDisplay(selectedBooking.end_time));\n    const originalBookingSlots = HOURS.slice(originalBookingStartIndex, originalBookingEndIndex);\n    const generalConflict = newRequestedSlots.some(slot => {\n      // A slot is conflicting if it's in `bookedSlots` AND it's NOT part of the original booking\n      // This ensures the user can pick their original slot even if it's in `bookedSlots` (because it's their own)\n      return bookedSlots.includes(slot) && !originalBookingSlots.includes(slot);\n    });\n    return conflictFound || generalConflict;\n  }, [bookings, selectedBooking, bookedSlots, formatTimeForDisplay]);\n  const saveEdit = useCallback(async () => {\n    setStatusMsg(\"\");\n    setStatusType(\"\");\n    if (!newStartTime || !newEndTime) {\n      setStatusType(\"error\");\n      setStatusMsg(\"Please select both start and end time.\");\n      return;\n    }\n    const startMin = timeToMinutes(newStartTime);\n    const endMin = timeToMinutes(newEndTime);\n    if (startMin >= endMin) {\n      setStatusType(\"error\");\n      setStatusMsg(\"End time must be after start time.\");\n      return;\n    }\n\n    // Frontend validation before sending to backend\n    if (isRangeBooked(newStartTime, newEndTime, editingId)) {\n      setStatusType(\"error\");\n      setStatusMsg(\"Selected time slot conflicts with an existing booking or is unavailable.\");\n      return;\n    }\n    const payload = {\n      id: editingId,\n      newTime: timeAmPmTo24hrISO(newStartTime),\n      // Convert to 24-hour ISO format for backend\n      newEndTime: timeAmPmTo24hrISO(newEndTime),\n      // Convert to 24-hour ISO format for backend\n      date: selectedBooking.date,\n      room: selectedBooking.room,\n      userEmail: user.email\n    };\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      await axios.post(`${API_URL}/api/booking/edit`, payload, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setStatusType(\"success\");\n      setStatusMsg(\"Booking updated successfully! Please note: new bookings might require Admin Approval.\");\n      setEditingId(null);\n      setNewStartTime(\"\");\n      setNewEndTime(\"\");\n      setSelectedBooking(null);\n      fetchBookings(); // Re-fetch all bookings\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Failed to edit booking:\", error);\n      setStatusType(\"error\");\n      setStatusMsg(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || \"Failed to edit booking. Please try again.\");\n    }\n  }, [newStartTime, newEndTime, editingId, selectedBooking, user, API_URL, timeToMinutes, isRangeBooked, timeAmPmTo24hrISO, fetchBookings]);\n  const handleLogout = useCallback(() => {\n    logout();\n    navigate(\"/login\");\n  }, [logout, navigate]);\n\n  // --- Render Function ---\n\n  const renderBookingCards = useCallback(bookingsToRender => {\n    if (!bookingsToRender.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm p-6 text-center text-gray-500\",\n        children: \"No bookings to display.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this);\n    }\n    return bookingsToRender.map(b => /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"bg-white rounded-xl shadow-sm overflow-hidden\",\n      whileHover: {\n        y: -2\n      },\n      transition: {\n        type: \"spring\",\n        stiffness: 300\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 bg-blue-50 rounded-lg mr-4 text-blue-600\",\n              children: /*#__PURE__*/_jsxDEV(FiClock, {\n                className: \"text-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-800\",\n                children: b.room\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600 mt-1\",\n                children: [formatDate(b.date), \" \\u2022 \", formatTimeForDisplay(b.time), \" -\", \" \", formatTimeForDisplay(b.end_time)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `px-3 py-1 rounded-full text-xs font-medium ${b.status === \"approved\" ? \"bg-green-100 text-green-800\" : b.status === \"cancelled\" ? \"bg-red-100 text-red-800\" : \"bg-yellow-100 text-yellow-800\"}`,\n            children: b.status.charAt(0).toUpperCase() + b.status.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), editingId === b.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"w-full border border-gray-300 rounded-lg px-4 py-2 focus:border-blue-500 focus:ring-blue-500\",\n                value: newStartTime,\n                onChange: e => {\n                  setNewStartTime(e.target.value);\n                  setNewEndTime(\"\"); // Reset end time when start time changes\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select start time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 21\n                }, this), HOURS.map(h => {\n                  const isBooked = bookedSlots.includes(h);\n                  const isCurrentStart = h === formatTimeForDisplay(b.time);\n\n                  // Check if this time slot (h) on the booking's date is in the past\n                  const timeToCheck = new Date(`${b.date}T${timeAmPmTo24hrISO(h)}`);\n                  const isPast = timeToCheck <= new Date();\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: h\n                    // Disable if it's booked and not the current start time, OR if it's in the past\n                    ,\n                    disabled: isBooked && !isCurrentStart || isPast,\n                    className: isBooked && !isCurrentStart || isPast ? \"text-gray-400\" : \"\",\n                    children: [formatTimeForDisplay(h), isBooked && !isCurrentStart && \" (Booked)\", isPast && \" (Past)\"]\n                  }, h, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"w-full border border-gray-300 rounded-lg px-4 py-2 focus:border-blue-500 focus:ring-blue-500\",\n                value: newEndTime,\n                onChange: e => setNewEndTime(e.target.value),\n                disabled: !newStartTime,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select end time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 21\n                }, this), HOURS.map((h, index) => {\n                  const startTimeIndex = HOURS.indexOf(newStartTime);\n                  const isAfterStart = startTimeIndex !== -1 && index > startTimeIndex;\n                  if (!isAfterStart) return null; // Only show times after the selected start time\n\n                  const isCurrentEnd = h === formatTimeForDisplay(b.end_time);\n\n                  // Check if the _entire range_ from newStartTime to h is available\n                  const potentialNewRange = HOURS.slice(startTimeIndex, index); // End time is exclusive for slots\n                  const isRangeAvailable = potentialNewRange.every(slot => {\n                    const isSlotBooked = bookedSlots.includes(slot);\n                    // Check if the slot is part of the original booking's duration\n                    const originalBookingStartIndex = HOURS.indexOf(formatTimeForDisplay(b.time));\n                    const originalBookingEndIndex = HOURS.indexOf(formatTimeForDisplay(b.end_time));\n                    const isSlotPartOfOriginalBooking = HOURS.indexOf(slot) >= originalBookingStartIndex && HOURS.indexOf(slot) < originalBookingEndIndex;\n                    return !isSlotBooked || isSlotPartOfOriginalBooking;\n                  });\n\n                  // Check if this time slot (h) on the booking's date is in the past\n                  const timeToCheck = new Date(`${b.date}T${timeAmPmTo24hrISO(h)}`);\n                  const isPast = timeToCheck <= new Date();\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: h\n                    // Disable if any part of the new range is unavailable AND it's not the current booking's end time, OR if in the past\n                    ,\n                    disabled: !isRangeAvailable && !isCurrentEnd || isPast,\n                    className: !isRangeAvailable && !isCurrentEnd || isPast ? \"text-gray-400\" : \"\",\n                    children: [formatTimeForDisplay(h), !isRangeAvailable && !isCurrentEnd && \" (Unavailable)\", isPast && \" (Past)\"]\n                  }, h, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), isLoadingSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-sm text-gray-500 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-blue-500 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 19\n            }, this), \"Loading available times...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 17\n          }, this), slotError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-sm text-red-500\",\n            children: slotError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 flex justify-end space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEditingId(null);\n                setNewStartTime(\"\");\n                setNewEndTime(\"\");\n                setSelectedBooking(null);\n                setStatusMsg(\"\"); // Clear status on cancel\n                setStatusType(\"\");\n              },\n              className: \"px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: saveEdit,\n              className: \"px-4 py-2 bg-blue-600 rounded-lg text-sm font-medium text-white hover:bg-blue-700 transition-colors flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(FiCheckCircle, {\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 19\n              }, this), \"Save Changes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 flex justify-end space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(b),\n            className: `px-4 py-2 rounded-lg text-sm font-medium flex items-center ${\n            // Disable if approved OR if the booking's end time is in the past OR if cancelled\n            b.status === \"approved\" || new Date(`${b.date}T${time24hrToIso(b.end_time)}`) <= new Date() || b.status === \"cancelled\" ? \"bg-gray-300 text-gray-600 cursor-not-allowed\" : \"bg-blue-600 text-white hover:bg-blue-700\"} transition-colors`,\n            disabled: b.status === \"approved\" || new Date(`${b.date}T${time24hrToIso(b.end_time)}`) <= new Date() || b.status === \"cancelled\",\n            children: [/*#__PURE__*/_jsxDEV(FiEdit2, {\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 17\n            }, this), \"Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCancel(b.id),\n            className: `px-4 py-2 rounded-lg text-sm font-medium text-white flex items-center ${\n            // Disable if cancelled OR if the booking's end time is in the past\n            b.status === \"cancelled\" || new Date(`${b.date}T${time24hrToIso(b.end_time)}`) <= new Date() ? \"bg-gray-300 text-gray-600 cursor-not-allowed\" : \"bg-red-600 hover:bg-red-700\"} transition-colors`,\n            disabled: b.status === \"cancelled\" || new Date(`${b.date}T${time24hrToIso(b.end_time)}`) <= new Date(),\n            children: [/*#__PURE__*/_jsxDEV(FiX, {\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this), \"Cancel Booking\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)\n    }, b.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this));\n  }, [editingId, newStartTime, newEndTime, bookedSlots, isLoadingSlots, slotError, saveEdit, handleEdit, handleCancel, formatDate, formatTimeForDisplay, timeAmPmTo24hrISO, time24hrToIso]);\n\n  // --- Main Render ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen bg-gray-50 font-poppins\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 bg-gradient-to-b from-green-700 to-green-600 shadow-xl hidden md:flex flex-col p-6 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-1\",\n          children: \"MeetingHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-green-100 text-sm\",\n          children: \"User Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"flex-1 space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard-user\",\n          className: \"flex items-center p-3 text-green-100 hover:bg-green-800 rounded-lg transition-all\",\n          children: [/*#__PURE__*/_jsxDEV(FiHome, {\n            className: \"mr-3 text-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/my-bookings\",\n          className: \"flex items-center p-3 text-white bg-green-800 rounded-lg transition-all hover:bg-green-900\",\n          children: [/*#__PURE__*/_jsxDEV(FiBookOpen, {\n            className: \"mr-3 text-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"My Bookings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/calendar\",\n          className: \"flex items-center p-3 text-green-100 hover:bg-green-800 rounded-lg transition-all\",\n          children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n            className: \"mr-3 text-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"New Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-auto pt-4 border-t border-green-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-4 p-3 bg-green-800 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-green-600 rounded-full mr-3\",\n            children: /*#__PURE__*/_jsxDEV(FiUser, {\n              className: \"text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm font-medium\",\n              children: (user === null || user === void 0 ? void 0 : user.name) || \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-green-200\",\n              children: (user === null || user === void 0 ? void 0 : user.email) || \"user@example.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"flex items-center w-full p-3 text-green-100 hover:bg-green-800 rounded-lg transition-all mt-2\",\n          onClick: handleLogout,\n          children: [/*#__PURE__*/_jsxDEV(FiLogOut, {\n            className: \"mr-3 text-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"bg-white shadow-sm p-6 mb-6 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-800\",\n          children: \"My Bookings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"View and manage your active and upcoming bookings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this), statusMsg && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: -20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: `mb-6 p-4 rounded-lg ${statusType === \"success\" ? \"bg-green-100 text-green-800 border border-green-200\" : \"bg-red-100 text-red-800 border border-red-200\"}`,\n        children: statusMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 11\n      }, this), isLoadingBookings ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-48\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ml-3 text-gray-700\",\n          children: \"Loading your bookings...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 11\n      }, this) : bookings.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-sm p-8 text-center max-w-2xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-auto h-16 w-16 text-gray-400 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(FiCalendar, {\n            className: \"w-full h-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900\",\n          children: \"No bookings yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-gray-500 mb-6\",\n          children: \"You haven't made any bookings yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/calendar\",\n          className: \"inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 15\n          }, this), \"Book a Room\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8 max-w-4xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-800 mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(FiChevronRight, {\n              className: \"text-green-600 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 17\n            }, this), \" Upcoming Bookings (\", upcomingBookings.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 gap-6\",\n            children: renderBookingCards(upcomingBookings)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-800 mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(FiChevronRight, {\n              className: \"text-blue-600 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this), \" Past Bookings (\", pastBookings.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 gap-6\",\n            children: renderBookingCards(pastBookings)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 620,\n    columnNumber: 5\n  }, this);\n}\n_s(MyBookings, \"j/G4ttMdbU8dXYFeJTNR+fpBp5E=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = MyBookings;\nvar _c;\n$RefreshReg$(_c, \"MyBookings\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","useAuth","Link","FiCalendar","FiBookOpen","FiHome","FiLogOut","FiUser","FiClock","FiCheckCircle","FiX","FiEdit2","FiChevronRight","FiPlus","motion","useNavigate","jsxDEV","_jsxDEV","HOURS","MyBookings","_s","user","logout","loadingAuth","bookings","setBookings","upcomingBookings","setUpcomingBookings","pastBookings","setPastBookings","statusMsg","setStatusMsg","statusType","setStatusType","editingId","setEditingId","newStartTime","setNewStartTime","newEndTime","setNewEndTime","bookedSlots","setBookedSlots","selectedBooking","setSelectedBooking","isLoadingSlots","setIsLoadingSlots","slotError","setSlotError","isLoadingBookings","setIsLoadingBookings","navigate","API_URL","process","env","REACT_APP_API_URL","timeAmPmTo24hrISO","timeAmPm","cleanedTime","toLowerCase","replace","time","period","split","hours","minutes","map","Number","String","padStart","time24hrToIso","time24hr","slice","formatTimeForDisplay","time24","hourStr","minuteStr","hour","parseInt","formatDate","isoDate","date","Date","isNaN","getTime","options","weekday","month","day","toLocaleDateString","timeToMinutes","timeStr","timePart","includes","total","fetchBookings","email","token","localStorage","getItem","Error","response","get","headers","Authorization","allBookings","data","now","todayMidnight","getFullYear","getMonth","getDate","upcoming","past","forEach","booking","bookingDate","console","warn","push","sort","a","b","dateA","dateB","error","_error$response","_error$response$data","message","status","fetchBookedSlots","room","res","handleCancel","id","post","_error$response2","_error$response2$data","handleEdit","bookingEndDateTime","end_time","isRangeBooked","start","end","currentBookingId","startIndex","indexOf","endIndex","newRequestedSlots","relevantBookings","filter","conflictFound","some","existingBooking","existingStartTimeDisplay","existingEndTimeDisplay","existingStartIndex","existingEndIndex","existingOccupiedSlots","slot","originalBookingStartIndex","originalBookingEndIndex","originalBookingSlots","generalConflict","saveEdit","startMin","endMin","payload","newTime","userEmail","_error$response3","_error$response3$data","handleLogout","renderBookingCards","bookingsToRender","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","div","whileHover","y","transition","type","stiffness","charAt","toUpperCase","value","onChange","e","target","h","isBooked","isCurrentStart","timeToCheck","isPast","disabled","index","startTimeIndex","isAfterStart","isCurrentEnd","potentialNewRange","isRangeAvailable","every","isSlotBooked","isSlotPartOfOriginalBooking","onClick","to","name","initial","opacity","animate","_c","$RefreshReg$"],"sources":["C:/Users/ecah1/meeting-room-booking/frontend/src/pages/MyBookings.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  FiCalendar,\r\n  FiBookOpen,\r\n  FiHome,\r\n  FiLogOut,\r\n  FiUser,\r\n  FiClock,\r\n  FiCheckCircle,\r\n  FiX,\r\n  FiEdit2,\r\n  FiChevronRight,\r\n  FiPlus,\r\n} from \"react-icons/fi\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Standard business hours (ensure these match your backend's format or are convertible)\r\nconst HOURS = [\r\n  \"8:00am\",\r\n  \"9:00am\",\r\n  \"10:00am\",\r\n  \"11:00am\",\r\n  \"12:00pm\",\r\n  \"1:00pm\",\r\n  \"2:00pm\",\r\n  \"3:00pm\",\r\n  \"4:00pm\",\r\n];\r\n\r\nexport default function MyBookings() {\r\n  const { user, logout, loadingAuth } = useAuth();\r\n  const [bookings, setBookings] = useState([]);\r\n  const [upcomingBookings, setUpcomingBookings] = useState([]);\r\n  const [pastBookings, setPastBookings] = useState([]);\r\n  const [statusMsg, setStatusMsg] = useState(\"\");\r\n  const [statusType, setStatusType] = useState(\"\"); // \"success\" | \"error\"\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [newStartTime, setNewStartTime] = useState(\"\");\r\n  const [newEndTime, setNewEndTime] = useState(\"\");\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n  const [isLoadingSlots, setIsLoadingSlots] = useState(false);\r\n  const [slotError, setSlotError] = useState(null);\r\n  const [isLoadingBookings, setIsLoadingBookings] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL;\r\n\r\n  // --- Helper Functions (Memoized with useCallback) ---\r\n\r\n  // Helper to convert 'HH:MM AM/PM' to 'HH:MM:00' (24-hour) for internal Date constructor use\r\n  const timeAmPmTo24hrISO = useCallback((timeAmPm) => {\r\n    if (!timeAmPm) return \"00:00:00\";\r\n    const cleanedTime = timeAmPm.toLowerCase().replace(/\\s/g, '');\r\n    const [time, period] = cleanedTime.split(/(am|pm)/);\r\n    let [hours, minutes] = time.split(\":\").map(Number);\r\n\r\n    if (period === \"pm\" && hours !== 12) {\r\n      hours += 12;\r\n    } else if (period === \"am\" && hours === 12) {\r\n      hours = 0;\r\n    }\r\n    return `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(2, \"0\")}:00`;\r\n  }, []);\r\n\r\n  // Helper to convert DB's 24-hour time ('HH:MM:SS' or 'HH:MM') to 'HH:MM' for Date constructor\r\n  const time24hrToIso = useCallback((time24hr) => {\r\n    if (!time24hr) return \"00:00\";\r\n    return time24hr.slice(0, 5); // Take first 5 chars \"HH:MM\"\r\n  }, []);\r\n\r\n  // This function converts DB's 24-hour time ('HH:MM:SS' or 'HH:MM') to your display format (e.g., \"8:00am\")\r\n  const formatTimeForDisplay = useCallback((time24) => {\r\n    if (!time24) return \"\";\r\n    const [hourStr, minuteStr] = time24.split(\":\");\r\n    let hour = parseInt(hourStr, 10);\r\n    const period = hour >= 12 ? \"pm\" : \"am\";\r\n    hour = hour % 12;\r\n    hour = hour === 0 ? 12 : hour; // Convert 0 (midnight) to 12 AM\r\n    return `${hour}:${minuteStr}${period}`;\r\n  }, []);\r\n\r\n  // This function formats date from ISO string to display (e.g., \"Sat, Jun 22\")\r\n  const formatDate = useCallback((isoDate) => {\r\n    if (!isoDate) return \"Invalid Date\";\r\n    const date = new Date(isoDate);\r\n    if (isNaN(date.getTime())) return \"Invalid Date\";\r\n    const options = { weekday: \"short\", month: \"short\", day: \"numeric\" };\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  }, []);\r\n\r\n  // This function converts your 'hours' array time (e.g., '8:00am') to numerical minutes for comparison\r\n  const timeToMinutes = useCallback((timeStr) => {\r\n    if (!timeStr) return 0;\r\n    const cleanedTime = timeStr.toLowerCase().replace(/\\s/g, '');\r\n    const timePart = cleanedTime.split(/(am|pm)/)[0];\r\n    const period = cleanedTime.includes(\"pm\") ? \"pm\" : \"am\";\r\n\r\n    let [hours, minutes] = timePart.split(\":\").map(Number);\r\n    let total = hours * 60 + minutes;\r\n    if (period === \"pm\" && hours !== 12) total += 12 * 60;\r\n    if (period === \"am\" && hours === 12) total -= 12 * 60;\r\n    return total;\r\n  }, []);\r\n\r\n  // --- Fetching Data ---\r\n\r\n  const fetchBookings = useCallback(async () => {\r\n    if (loadingAuth || !user?.email) {\r\n      setIsLoadingBookings(false);\r\n      return;\r\n    }\r\n    setIsLoadingBookings(true);\r\n    setStatusMsg(\"\");\r\n    setStatusType(\"\"); // Clear status messages\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        throw new Error(\"Authentication token not found.\");\r\n      }\r\n      const response = await axios.get(\r\n        `${API_URL}/api/booking/user-bookings?email=${user.email}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      const allBookings = response.data;\r\n      const now = new Date(); // Current date and time\r\n      // Get today's date, normalized to midnight (00:00:00) for comparison\r\n      // This will set it to today's date, 12:00:00 AM in the client's local timezone\r\n      const todayMidnight = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n\r\n\r\n      const upcoming = [];\r\n      const past = [];\r\n\r\n      allBookings.forEach((booking) => {\r\n        // Parse booking date to a Date object, also normalized to midnight\r\n        // Use a date string that Date constructor can parse consistently to midnight\r\n        const bookingDate = new Date(booking.date + 'T00:00:00'); // Forces date to be at midnight for comparison\r\n\r\n        if (isNaN(bookingDate.getTime())) {\r\n          console.warn(\"Invalid booking date encountered:\", booking);\r\n          past.push(booking); // Fallback to past if date is invalid\r\n          return;\r\n        }\r\n\r\n        // --- CLASSIFICATION LOGIC (CHANGED HERE) ---\r\n        // Option 3: Classify by Date only. All of today's bookings are 'upcoming'.\r\n        if (bookingDate.getTime() >= todayMidnight.getTime()) {\r\n          upcoming.push(booking);\r\n        } else {\r\n          past.push(booking);\r\n        }\r\n        // --- END CLASSIFICATION LOGIC ---\r\n      });\r\n\r\n      // Sort upcoming by earliest start time first\r\n      upcoming.sort((a, b) => {\r\n        const dateA = new Date(`${a.date}T${time24hrToIso(a.time)}`);\r\n        const dateB = new Date(`${b.date}T${time24hrToIso(b.time)}`);\r\n        if (isNaN(dateA.getTime()) || isNaN(dateB.getTime())) return 0;\r\n        return dateA.getTime() - dateB.getTime();\r\n      });\r\n\r\n      // Sort past by latest start time first\r\n      past.sort((a, b) => {\r\n        const dateA = new Date(`${a.date}T${time24hrToIso(a.time)}`);\r\n        const dateB = new Date(`${b.date}T${time24hrToIso(b.time)}`);\r\n        if (isNaN(dateA.getTime()) || isNaN(dateB.getTime())) return 0;\r\n        return dateB.getTime() - dateA.getTime();\r\n      });\r\n\r\n      setBookings(allBookings); // Keep all for `isRangeBooked` conflicts\r\n      setUpcomingBookings(upcoming);\r\n      setPastBookings(past);\r\n      setStatusType(\"\");\r\n      setStatusMsg(\"\");\r\n    } catch (error) {\r\n      console.error(\"Failed to load bookings:\", error);\r\n      setStatusType(\"error\");\r\n      setStatusMsg(error.response?.data?.message || \"Failed to load bookings.\");\r\n      if (error.response && (error.response.status === 401 || error.response.status === 403)) {\r\n        logout();\r\n        navigate(\"/login\");\r\n      }\r\n    } finally {\r\n      setIsLoadingBookings(false);\r\n    }\r\n  }, [user, loadingAuth, logout, navigate, time24hrToIso]); // Dependencies for useCallback\r\n\r\n  const fetchBookedSlots = useCallback(async (date, room) => {\r\n    setIsLoadingSlots(true);\r\n    setSlotError(null);\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      const res = await axios.get(\r\n        `${API_URL}/api/booking/slots?date=${date}&room=${room}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setBookedSlots(res.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to load booked time slots:\", error);\r\n      setBookedSlots([]);\r\n      setSlotError(\"Failed to load booked time slots.\");\r\n    } finally {\r\n      setIsLoadingSlots(false);\r\n    }\r\n  }, [API_URL]); // Dependencies for useCallback\r\n\r\n  useEffect(() => {\r\n    if (!loadingAuth && user?.email) {\r\n      fetchBookings();\r\n    } else if (!loadingAuth && !user) {\r\n      setIsLoadingBookings(false);\r\n    }\r\n  }, [loadingAuth, user, fetchBookings]);\r\n\r\n  // --- Handlers ---\r\n\r\n  const handleCancel = useCallback(async (id) => {\r\n    setStatusMsg(\"\");\r\n    setStatusType(\"\");\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      await axios.post(\r\n        `${API_URL}/api/booking/cancel`,\r\n        { id, email: user.email },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setStatusType(\"success\");\r\n      setStatusMsg(\"Booking cancelled successfully!\");\r\n      fetchBookings();\r\n    } catch (error) {\r\n      console.error(\"Failed to cancel booking:\", error);\r\n      setStatusType(\"error\");\r\n      setStatusMsg(error.response?.data?.message || \"Failed to cancel booking.\");\r\n    }\r\n  }, [user, API_URL, fetchBookings]);\r\n\r\n  const handleEdit = useCallback((booking) => {\r\n    setNewStartTime(\"\");\r\n    setNewEndTime(\"\");\r\n    setStatusMsg(\"\");\r\n    setStatusType(\"\");\r\n\r\n    const bookingEndDateTime = new Date(`${booking.date}T${time24hrToIso(booking.end_time)}`);\r\n    const now = new Date();\r\n    if (isNaN(bookingEndDateTime.getTime())) {\r\n      setStatusType(\"error\");\r\n      setStatusMsg(\"Invalid booking date/time. Cannot edit.\");\r\n      return;\r\n    }\r\n    // Check if the booking has already fully ended\r\n    if (bookingEndDateTime <= now) {\r\n      setStatusType(\"error\");\r\n      setStatusMsg(\"Past bookings cannot be edited.\");\r\n      return;\r\n    }\r\n\r\n    if (booking.status === \"approved\") {\r\n      setStatusType(\"error\");\r\n      setStatusMsg(\"Approved bookings cannot be edited.\");\r\n      return;\r\n    }\r\n    if (booking.status === \"cancelled\") {\r\n        setStatusType(\"error\");\r\n        setStatusMsg(\"Cancelled bookings cannot be edited.\");\r\n        return;\r\n    }\r\n\r\n    setEditingId(booking.id);\r\n    setNewStartTime(formatTimeForDisplay(booking.time));\r\n    setNewEndTime(formatTimeForDisplay(booking.end_time));\r\n    setSelectedBooking(booking);\r\n\r\n    fetchBookedSlots(booking.date, booking.room);\r\n  }, [fetchBookedSlots, formatTimeForDisplay, time24hrToIso]);\r\n\r\n  // isRangeBooked: Checks for conflicts with *all* other bookings for the same room and date\r\n  // (both the user's other bookings and general booked slots from backend)\r\n  const isRangeBooked = useCallback((start, end, currentBookingId) => {\r\n    const startIndex = HOURS.indexOf(start);\r\n    const endIndex = HOURS.indexOf(end);\r\n\r\n    if (startIndex === -1 || endIndex === -1 || startIndex >= endIndex) {\r\n      return true; // Invalid range implies a conflict\r\n    }\r\n\r\n    // Slots requested by the user, exclusive of the end time slot itself\r\n    const newRequestedSlots = HOURS.slice(startIndex, endIndex);\r\n\r\n    // Filter `bookings` to only include relevant conflicts (same room, same date, not the current booking, not cancelled)\r\n    const relevantBookings = bookings.filter(b =>\r\n      b.room === selectedBooking?.room &&\r\n      b.date === selectedBooking?.date &&\r\n      b.id !== currentBookingId && // Exclude the current booking being edited\r\n      b.status !== \"cancelled\" // Ignore cancelled bookings\r\n    );\r\n\r\n    // Check for conflicts with other bookings\r\n    const conflictFound = relevantBookings.some(existingBooking => {\r\n      const existingStartTimeDisplay = formatTimeForDisplay(existingBooking.time);\r\n      const existingEndTimeDisplay = formatTimeForDisplay(existingBooking.end_time);\r\n\r\n      const existingStartIndex = HOURS.indexOf(existingStartTimeDisplay);\r\n      const existingEndIndex = HOURS.indexOf(existingEndTimeDisplay);\r\n\r\n      if (existingStartIndex === -1 || existingEndIndex === -1 || existingStartIndex >= existingEndIndex) {\r\n        console.warn(\"Invalid existing booking time format, skipping conflict check for this booking:\", existingBooking);\r\n        return false;\r\n      }\r\n\r\n      const existingOccupiedSlots = HOURS.slice(existingStartIndex, existingEndIndex);\r\n\r\n      // Check for overlap: does any requested slot exist in existing occupied slots?\r\n      return newRequestedSlots.some(slot => existingOccupiedSlots.includes(slot));\r\n    });\r\n\r\n    // Additionally, check for conflicts with general booked slots from the backend (if any that are not user's current original booking)\r\n    const originalBookingStartIndex = HOURS.indexOf(formatTimeForDisplay(selectedBooking.time));\r\n    const originalBookingEndIndex = HOURS.indexOf(formatTimeForDisplay(selectedBooking.end_time));\r\n    const originalBookingSlots = HOURS.slice(originalBookingStartIndex, originalBookingEndIndex);\r\n\r\n    const generalConflict = newRequestedSlots.some(slot => {\r\n        // A slot is conflicting if it's in `bookedSlots` AND it's NOT part of the original booking\r\n        // This ensures the user can pick their original slot even if it's in `bookedSlots` (because it's their own)\r\n        return bookedSlots.includes(slot) && !originalBookingSlots.includes(slot);\r\n    });\r\n\r\n    return conflictFound || generalConflict;\r\n  }, [bookings, selectedBooking, bookedSlots, formatTimeForDisplay]);\r\n\r\n  const saveEdit = useCallback(async () => {\r\n    setStatusMsg(\"\");\r\n    setStatusType(\"\");\r\n\r\n    if (!newStartTime || !newEndTime) {\r\n      setStatusType(\"error\");\r\n      setStatusMsg(\"Please select both start and end time.\");\r\n      return;\r\n    }\r\n\r\n    const startMin = timeToMinutes(newStartTime);\r\n    const endMin = timeToMinutes(newEndTime);\r\n\r\n    if (startMin >= endMin) {\r\n      setStatusType(\"error\");\r\n      setStatusMsg(\"End time must be after start time.\");\r\n      return;\r\n    }\r\n\r\n    // Frontend validation before sending to backend\r\n    if (isRangeBooked(newStartTime, newEndTime, editingId)) {\r\n      setStatusType(\"error\");\r\n      setStatusMsg(\"Selected time slot conflicts with an existing booking or is unavailable.\");\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      id: editingId,\r\n      newTime: timeAmPmTo24hrISO(newStartTime), // Convert to 24-hour ISO format for backend\r\n      newEndTime: timeAmPmTo24hrISO(newEndTime), // Convert to 24-hour ISO format for backend\r\n      date: selectedBooking.date,\r\n      room: selectedBooking.room,\r\n      userEmail: user.email,\r\n    };\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      await axios.post(`${API_URL}/api/booking/edit`, payload, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setStatusType(\"success\");\r\n      setStatusMsg(\"Booking updated successfully! Please note: new bookings might require Admin Approval.\");\r\n      setEditingId(null);\r\n      setNewStartTime(\"\");\r\n      setNewEndTime(\"\");\r\n      setSelectedBooking(null);\r\n      fetchBookings(); // Re-fetch all bookings\r\n    } catch (error) {\r\n      console.error(\"Failed to edit booking:\", error);\r\n      setStatusType(\"error\");\r\n      setStatusMsg(error.response?.data?.error || \"Failed to edit booking. Please try again.\");\r\n    }\r\n  }, [newStartTime, newEndTime, editingId, selectedBooking, user, API_URL, timeToMinutes, isRangeBooked, timeAmPmTo24hrISO, fetchBookings]);\r\n\r\n  const handleLogout = useCallback(() => {\r\n    logout();\r\n    navigate(\"/login\");\r\n  }, [logout, navigate]);\r\n\r\n  // --- Render Function ---\r\n\r\n  const renderBookingCards = useCallback((bookingsToRender) => {\r\n    if (!bookingsToRender.length) {\r\n      return (\r\n        <div className=\"bg-white rounded-lg shadow-sm p-6 text-center text-gray-500\">\r\n          No bookings to display.\r\n        </div>\r\n      );\r\n    }\r\n    return bookingsToRender.map((b) => (\r\n      <motion.div\r\n        key={b.id}\r\n        className=\"bg-white rounded-xl shadow-sm overflow-hidden\"\r\n        whileHover={{ y: -2 }}\r\n        transition={{ type: \"spring\", stiffness: 300 }}\r\n      >\r\n        <div className=\"p-6\">\r\n          <div className=\"flex justify-between items-start\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"p-3 bg-blue-50 rounded-lg mr-4 text-blue-600\">\r\n                <FiClock className=\"text-lg\" />\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-800\">\r\n                  {b.room}\r\n                </h3>\r\n                <p className=\"text-gray-600 mt-1\">\r\n                  {formatDate(b.date)} • {formatTimeForDisplay(b.time)} -{\" \"}\r\n                  {formatTimeForDisplay(b.end_time)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <span\r\n              className={`px-3 py-1 rounded-full text-xs font-medium ${\r\n                b.status === \"approved\"\r\n                  ? \"bg-green-100 text-green-800\"\r\n                  : b.status === \"cancelled\"\r\n                  ? \"bg-red-100 text-red-800\"\r\n                  : \"bg-yellow-100 text-yellow-800\"\r\n              }`}\r\n            >\r\n              {b.status.charAt(0).toUpperCase() + b.status.slice(1)}\r\n            </span>\r\n          </div>\r\n\r\n          {editingId === b.id ? (\r\n            <div className=\"mt-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Start Time\r\n                  </label>\r\n                  <select\r\n                    className=\"w-full border border-gray-300 rounded-lg px-4 py-2 focus:border-blue-500 focus:ring-blue-500\"\r\n                    value={newStartTime}\r\n                    onChange={(e) => {\r\n                      setNewStartTime(e.target.value);\r\n                      setNewEndTime(\"\"); // Reset end time when start time changes\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select start time</option>\r\n                    {HOURS.map((h) => {\r\n                      const isBooked = bookedSlots.includes(h);\r\n                      const isCurrentStart = h === formatTimeForDisplay(b.time);\r\n\r\n                      // Check if this time slot (h) on the booking's date is in the past\r\n                      const timeToCheck = new Date(`${b.date}T${timeAmPmTo24hrISO(h)}`);\r\n                      const isPast = timeToCheck <= new Date();\r\n\r\n                      return (\r\n                        <option\r\n                          key={h}\r\n                          value={h}\r\n                          // Disable if it's booked and not the current start time, OR if it's in the past\r\n                          disabled={(isBooked && !isCurrentStart) || isPast}\r\n                          className={((isBooked && !isCurrentStart) || isPast) ? \"text-gray-400\" : \"\"}\r\n                        >\r\n                          {formatTimeForDisplay(h)}\r\n                          {isBooked && !isCurrentStart && \" (Booked)\"}\r\n                          {isPast && \" (Past)\"}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    End Time\r\n                  </label>\r\n                  <select\r\n                    className=\"w-full border border-gray-300 rounded-lg px-4 py-2 focus:border-blue-500 focus:ring-blue-500\"\r\n                    value={newEndTime}\r\n                    onChange={(e) => setNewEndTime(e.target.value)}\r\n                    disabled={!newStartTime}\r\n                  >\r\n                    <option value=\"\">Select end time</option>\r\n                    {HOURS.map((h, index) => {\r\n                      const startTimeIndex = HOURS.indexOf(newStartTime);\r\n                      const isAfterStart = startTimeIndex !== -1 && index > startTimeIndex;\r\n                      if (!isAfterStart) return null; // Only show times after the selected start time\r\n\r\n                      const isCurrentEnd = h === formatTimeForDisplay(b.end_time);\r\n\r\n                      // Check if the _entire range_ from newStartTime to h is available\r\n                      const potentialNewRange = HOURS.slice(startTimeIndex, index); // End time is exclusive for slots\r\n                      const isRangeAvailable = potentialNewRange.every(slot => {\r\n                        const isSlotBooked = bookedSlots.includes(slot);\r\n                        // Check if the slot is part of the original booking's duration\r\n                        const originalBookingStartIndex = HOURS.indexOf(formatTimeForDisplay(b.time));\r\n                        const originalBookingEndIndex = HOURS.indexOf(formatTimeForDisplay(b.end_time));\r\n                        const isSlotPartOfOriginalBooking = (\r\n                            HOURS.indexOf(slot) >= originalBookingStartIndex &&\r\n                            HOURS.indexOf(slot) < originalBookingEndIndex\r\n                        );\r\n                        return !isSlotBooked || isSlotPartOfOriginalBooking;\r\n                      });\r\n\r\n                      // Check if this time slot (h) on the booking's date is in the past\r\n                      const timeToCheck = new Date(`${b.date}T${timeAmPmTo24hrISO(h)}`);\r\n                      const isPast = timeToCheck <= new Date();\r\n\r\n                      return (\r\n                        <option\r\n                          key={h}\r\n                          value={h}\r\n                          // Disable if any part of the new range is unavailable AND it's not the current booking's end time, OR if in the past\r\n                          disabled={(!isRangeAvailable && !isCurrentEnd) || isPast}\r\n                          className={((!isRangeAvailable && !isCurrentEnd) || isPast) ? \"text-gray-400\" : \"\"}\r\n                        >\r\n                          {formatTimeForDisplay(h)}\r\n                          {(!isRangeAvailable && !isCurrentEnd) && \" (Unavailable)\"}\r\n                          {isPast && \" (Past)\"}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              {isLoadingSlots && (\r\n                <div className=\"mt-2 text-sm text-gray-500 flex items-center\">\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-blue-500 mr-2\"></div>\r\n                  Loading available times...\r\n                </div>\r\n              )}\r\n              {slotError && (\r\n                <div className=\"mt-2 text-sm text-red-500\">{slotError}</div>\r\n              )}\r\n\r\n              <div className=\"mt-4 flex justify-end space-x-3\">\r\n                <button\r\n                  onClick={() => {\r\n                    setEditingId(null);\r\n                    setNewStartTime(\"\");\r\n                    setNewEndTime(\"\");\r\n                    setSelectedBooking(null);\r\n                    setStatusMsg(\"\"); // Clear status on cancel\r\n                    setStatusType(\"\");\r\n                  }}\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={saveEdit}\r\n                  className=\"px-4 py-2 bg-blue-600 rounded-lg text-sm font-medium text-white hover:bg-blue-700 transition-colors flex items-center\"\r\n                >\r\n                  <FiCheckCircle className=\"mr-2\" />\r\n                  Save Changes\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"mt-4 flex justify-end space-x-3\">\r\n              <button\r\n                onClick={() => handleEdit(b)}\r\n                className={`px-4 py-2 rounded-lg text-sm font-medium flex items-center ${\r\n                  // Disable if approved OR if the booking's end time is in the past OR if cancelled\r\n                  b.status === \"approved\" || new Date(`${b.date}T${time24hrToIso(b.end_time)}`) <= new Date() || b.status === \"cancelled\"\r\n                    ? \"bg-gray-300 text-gray-600 cursor-not-allowed\"\r\n                    : \"bg-blue-600 text-white hover:bg-blue-700\"\r\n                } transition-colors`}\r\n                disabled={b.status === \"approved\" || new Date(`${b.date}T${time24hrToIso(b.end_time)}`) <= new Date() || b.status === \"cancelled\"}\r\n              >\r\n                <FiEdit2 className=\"mr-2\" />\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => handleCancel(b.id)}\r\n                className={`px-4 py-2 rounded-lg text-sm font-medium text-white flex items-center ${\r\n                  // Disable if cancelled OR if the booking's end time is in the past\r\n                  b.status === \"cancelled\" || new Date(`${b.date}T${time24hrToIso(b.end_time)}`) <= new Date()\r\n                    ? \"bg-gray-300 text-gray-600 cursor-not-allowed\"\r\n                    : \"bg-red-600 hover:bg-red-700\"\r\n                } transition-colors`}\r\n                disabled={b.status === \"cancelled\" || new Date(`${b.date}T${time24hrToIso(b.end_time)}`) <= new Date()}\r\n              >\r\n                <FiX className=\"mr-2\" />\r\n                Cancel Booking\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </motion.div>\r\n    ));\r\n  }, [editingId, newStartTime, newEndTime, bookedSlots, isLoadingSlots, slotError, saveEdit, handleEdit, handleCancel, formatDate, formatTimeForDisplay, timeAmPmTo24hrISO, time24hrToIso]);\r\n\r\n  // --- Main Render ---\r\n  return (\r\n    <div className=\"flex min-h-screen bg-gray-50 font-poppins\">\r\n      {/* Sidebar */}\r\n      <div className=\"w-64 bg-gradient-to-b from-green-700 to-green-600 shadow-xl hidden md:flex flex-col p-6 text-white\">\r\n        <div className=\"mb-10\">\r\n          <h2 className=\"text-2xl font-bold mb-1\">MeetingHub</h2>\r\n          <p className=\"text-green-100 text-sm\">User Dashboard</p>\r\n        </div>\r\n\r\n        <nav className=\"flex-1 space-y-2\">\r\n          <Link\r\n            to=\"/dashboard-user\"\r\n            className=\"flex items-center p-3 text-green-100 hover:bg-green-800 rounded-lg transition-all\"\r\n          >\r\n            <FiHome className=\"mr-3 text-lg\" />\r\n            <span>Dashboard</span>\r\n          </Link>\r\n          <Link\r\n            to=\"/my-bookings\"\r\n            className=\"flex items-center p-3 text-white bg-green-800 rounded-lg transition-all hover:bg-green-900\"\r\n          >\r\n            <FiBookOpen className=\"mr-3 text-lg\" />\r\n            <span>My Bookings</span>\r\n          </Link>\r\n          <Link\r\n            to=\"/calendar\"\r\n            className=\"flex items-center p-3 text-green-100 hover:bg-green-800 rounded-lg transition-all\"\r\n          >\r\n            <FiCalendar className=\"mr-3 text-lg\" />\r\n            <span>New Booking</span>\r\n          </Link>\r\n        </nav>\r\n\r\n        <div className=\"mt-auto pt-4 border-t border-green-800\">\r\n          <div className=\"flex items-center mb-4 p-3 bg-green-800 rounded-lg\">\r\n            <div className=\"p-2 bg-green-600 rounded-full mr-3\">\r\n              <FiUser className=\"text-white\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-medium\">{user?.name || \"User\"}</p>\r\n              <p className=\"text-xs text-green-200\">\r\n                {user?.email || \"user@example.com\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            className=\"flex items-center w-full p-3 text-green-100 hover:bg-green-800 rounded-lg transition-all mt-2\"\r\n            onClick={handleLogout}\r\n          >\r\n            <FiLogOut className=\"mr-3 text-lg\" />\r\n            <span>Logout</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 p-6\">\r\n        <header className=\"bg-white shadow-sm p-6 mb-6 rounded-lg\">\r\n          <h1 className=\"text-2xl font-bold text-gray-800\">My Bookings</h1>\r\n          <p className=\"text-gray-600\">\r\n            View and manage your active and upcoming bookings\r\n          </p>\r\n        </header>\r\n\r\n        {statusMsg && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            className={`mb-6 p-4 rounded-lg ${\r\n              statusType === \"success\"\r\n                ? \"bg-green-100 text-green-800 border border-green-200\"\r\n                : \"bg-red-100 text-red-800 border border-red-200\"\r\n            }`}\r\n          >\r\n            {statusMsg}\r\n          </motion.div>\r\n        )}\r\n\r\n        {isLoadingBookings ? (\r\n          <div className=\"flex justify-center items-center h-48\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-600\"></div>\r\n            <p className=\"ml-3 text-gray-700\">Loading your bookings...</p>\r\n          </div>\r\n        ) : (bookings.length === 0 ? (\r\n          <div className=\"bg-white rounded-xl shadow-sm p-8 text-center max-w-2xl mx-auto\">\r\n            <div className=\"mx-auto h-16 w-16 text-gray-400 mb-4\">\r\n              <FiCalendar className=\"w-full h-full\" />\r\n            </div>\r\n            <h3 className=\"text-lg font-medium text-gray-900\">\r\n              No bookings yet\r\n            </h3>\r\n            <p className=\"mt-1 text-gray-500 mb-6\">\r\n              You haven't made any bookings yet.\r\n            </p>\r\n            <Link\r\n              to=\"/calendar\"\r\n              className=\"inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700 transition-colors\"\r\n            >\r\n              <FiPlus className=\"mr-2\" />\r\n              Book a Room\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-8 max-w-4xl\">\r\n            {/* Upcoming Bookings Section */}\r\n            <div>\r\n              <h2 className=\"text-xl font-bold text-gray-800 mb-4 flex items-center\">\r\n                <FiChevronRight className=\"text-green-600 mr-2\" /> Upcoming\r\n                Bookings ({upcomingBookings.length})\r\n              </h2>\r\n              <div className=\"grid grid-cols-1 gap-6\">\r\n                {renderBookingCards(upcomingBookings)}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Past Bookings Section */}\r\n            <div>\r\n              <h2 className=\"text-xl font-bold text-gray-800 mb-4 flex items-center\">\r\n                <FiChevronRight className=\"text-blue-600 mr-2\" /> Past Bookings\r\n                ({pastBookings.length})\r\n              </h2>\r\n              <div className=\"grid grid-cols-1 gap-6\">\r\n                {renderBookingCards(pastBookings)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}