{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ecah1\\\\meeting-room-booking\\\\frontend\\\\src\\\\pages\\\\MyBookings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport { FiCalendar, FiBookOpen, FiHome, FiLogOut, FiUser, FiClock, FiCheckCircle, FiXCircle, FiEdit2, FiX, FiChevronRight, FiPlus } from \"react-icons/fi\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyBookings() {\n  _s();\n  const {\n    user,\n    setUser\n  } = useAuth(); // Added setUser for logout\n  const [bookings, setBookings] = useState([]);\n  const [upcomingBookings, setUpcomingBookings] = useState([]);\n  const [pastBookings, setPastBookings] = useState([]);\n  const [statusMsg, setStatusMsg] = useState(\"\");\n  const [statusType, setStatusType] = useState(\"\"); // \"success\" | \"error\"\n  const [editingId, setEditingId] = useState(null);\n  const [newStartTime, setNewStartTime] = useState(\"\");\n  const [newEndTime, setNewEndTime] = useState(\"\");\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [selectedBooking, setSelectedBooking] = useState(null);\n  const [isLoadingSlots, setIsLoadingSlots] = useState(false);\n  const [slotError, setSlotError] = useState(null);\n  const navigate = useNavigate();\n  const API_URL = process.env.REACT_APP_API_URL;\n\n  // Standard business hours (ensure these match your backend's format or are convertible)\n  const hours = [\"8:00am\", \"9:00am\", \"10:00am\", \"11:00am\", \"12:00pm\", \"1:00pm\", \"2:00pm\", \"3:00pm\", \"4:00pm\"];\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.email) fetchBookings();\n  }, [user]);\n  const fetchBookings = () => {\n    axios.get(`${API_URL}/api/booking/user-bookings?email=${user.email}`).then(res => {\n      const allBookings = res.data;\n      const now = new Date(); // Current date and time (e.g., June 22, 2025, 10:16 PM)\n\n      const upcoming = [];\n      const past = [];\n      allBookings.forEach(booking => {\n        // IMPORTANT: Construct Date objects with both date AND time for accurate comparison\n        // Assuming booking.date is 'YYYY-MM-DD' and booking.end_time is 'HH:MM' (24-hour format from backend)\n        const bookingEndDateTime = new Date(`${booking.date}T${time24hrToIso(booking.end_time)}`);\n\n        // Compare the booking's end time with the current time\n        if (bookingEndDateTime > now) {\n          // If the booking's end time is in the future\n          upcoming.push(booking);\n        } else {\n          // If the booking's end time is in the past or exactly now\n          past.push(booking);\n        }\n      });\n\n      // Sort upcoming bookings by date and time ascending\n      upcoming.sort((a, b) => {\n        const dateA = new Date(`${a.date}T${time24hrToIso(a.time)}`);\n        const dateB = new Date(`${b.date}T${time24hrToIso(b.time)}`);\n        return dateA - dateB;\n      });\n\n      // Sort past bookings by date and time descending\n      past.sort((a, b) => {\n        const dateA = new Date(`${a.date}T${time24hrToIso(a.time)}`);\n        const dateB = new Date(`${b.date}T${time24hrToIso(b.time)}`);\n        return dateB - dateA;\n      });\n      setBookings(allBookings); // Keep all bookings for edit/cancel logic\n      setUpcomingBookings(upcoming);\n      setPastBookings(past);\n    }).catch(error => {\n      console.error(\"Failed to load bookings:\", error);\n      setStatusType(\"error\");\n      setStatusMsg(\"Failed to load bookings.\");\n    });\n  };\n\n  // Helper to convert 'HH:MM AM/PM' to 'HH:MM:00' (24-hour) for Date constructor\n  const timeAmPmTo24hr = timeAmPm => {\n    if (!timeAmPm) return \"00:00:00\";\n    const [time, period] = timeAmPm.split(/(am|pm)/i);\n    let [hours, minutes] = time.split(\":\").map(Number);\n    const lowerPeriod = period === null || period === void 0 ? void 0 : period.toLowerCase();\n    if (lowerPeriod === \"pm\" && hours !== 12) {\n      hours += 12;\n    } else if (lowerPeriod === \"am\" && hours === 12) {\n      hours = 0; // 12 AM is 00 hours\n    }\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:00`;\n  };\n\n  // Helper to convert 'HH:MM:SS' (from DB) to 'HH:MM' for Date constructor\n  // Or directly to HH:MM if DB is already HH:MM\n  const time24hrToIso = time24hr => {\n    if (!time24hr) return \"00:00\";\n    // Assuming backend time is HH:MM:SS or HH:MM. We need HH:MM for Date constructor with T\n    return time24hr.slice(0, 5); // Take first 5 chars \"HH:MM\"\n  };\n  const fetchBookedSlots = (date, room) => {\n    setIsLoadingSlots(true);\n    setSlotError(null);\n    axios.get(`${API_URL}/api/booking/slots?date=${date}&room=${room}`).then(res => {\n      // The backend `getSlotRange` returns slots like \"8:00am\", \"9:00am\".\n      // Ensure this matches the `hours` array directly.\n      setBookedSlots(res.data);\n    }).catch(error => {\n      console.error(\"Failed to load booked time slots:\", error);\n      setBookedSlots([]);\n      setSlotError(\"Failed to load booked time slots\");\n    }).finally(() => setIsLoadingSlots(false));\n  };\n\n  // This function converts DB's 24-hour time to your display format (e.g., \"8:00am\")\n  const formatTimeForDisplay = time24 => {\n    if (!time24) return \"\";\n    const [hourStr, minuteStr] = time24.split(\":\");\n    let hour = parseInt(hourStr, 10);\n    const period = hour >= 12 ? \"pm\" : \"am\";\n    hour = hour % 12;\n    hour = hour === 0 ? 12 : hour; // Convert 0 (midnight) to 12 AM\n    return `${hour}:${minuteStr}${period}`;\n  };\n  const handleCancel = id => {\n    axios.post(`${API_URL}/api/booking/cancel`, {\n      id,\n      email: user.email\n    }).then(() => {\n      setStatusType(\"success\");\n      setStatusMsg(\"Booking cancelled successfully!\");\n      fetchBookings();\n    }).catch(error => {\n      console.error(\"Failed to cancel booking:\", error);\n      setStatusType(\"error\");\n      setStatusMsg(\"Failed to cancel booking.\");\n    });\n  };\n  const handleEdit = booking => {\n    // Check if the booking's end time has already passed\n    const bookingEndDateTime = new Date(`${booking.date}T${time24hrToIso(booking.end_time)}`);\n    const now = new Date();\n    if (bookingEndDateTime <= now) {\n      setStatusType(\"error\");\n      setStatusMsg(\"Past bookings cannot be edited.\");\n      return;\n    }\n    if (booking.status === \"approved\") {\n      setStatusType(\"error\");\n      setStatusMsg(\"Approved bookings cannot be edited.\");\n      return;\n    }\n    setEditingId(booking.id);\n    setNewStartTime(formatTimeForDisplay(booking.time));\n    setNewEndTime(formatTimeForDisplay(booking.end_time));\n    setSelectedBooking(booking);\n\n    // Always fetch booked slots for the chosen date and room when editing\n    fetchBookedSlots(booking.date, booking.room);\n  };\n  const isRangeBooked = (start, end, currentBookingId) => {\n    const startIndex = hours.indexOf(start);\n    const endIndex = hours.indexOf(end);\n    if (startIndex === -1 || endIndex === -1 || startIndex >= endIndex) {\n      return true; // Invalid range, consider it booked to prevent errors\n    }\n\n    // Get all slots covered by the *new* requested range\n    const newRequestedSlots = hours.slice(startIndex, endIndex); // Exclusive end for slots\n\n    // Now, iterate through ALL current user's bookings (except the one being edited)\n    // to check for conflicts, regardless of their status (pending/approved)\n    const conflictFound = bookings.some(booking => {\n      // Exclude the current booking being edited\n      if (booking.id === currentBookingId) return false;\n\n      // Only check against bookings for the same room and date that are NOT cancelled\n      if (booking.room !== selectedBooking.room || booking.date !== selectedBooking.date || booking.status === \"cancelled\") {\n        return false;\n      }\n\n      // Convert backend 24-hour times to your `hours` array format for comparison\n      const existingBookingStart = formatTimeForDisplay(booking.time);\n      const existingBookingEnd = formatTimeForDisplay(booking.end_time);\n      const existingStartIndex = hours.indexOf(existingBookingStart);\n      const existingEndIndex = hours.indexOf(existingBookingEnd);\n      if (existingStartIndex === -1 || existingEndIndex === -1) {\n        console.warn(\"Invalid existing booking time format:\", booking.time, booking.end_time);\n        return false; // Skip if existing booking times are malformed\n      }\n      const existingOccupiedSlots = hours.slice(existingStartIndex, existingEndIndex);\n\n      // Check if any slot in the new requested range overlaps with existing occupied slots\n      return newRequestedSlots.some(slot => existingOccupiedSlots.includes(slot));\n    });\n\n    // Additionally, check against the `bookedSlots` fetched from the backend,\n    // which represent all booked slots for that room and date (regardless of user).\n    // This is crucial for preventing conflicts with other users' bookings.\n    const conflictWithOtherBookings = newRequestedSlots.some(slot => bookedSlots.includes(slot));\n    return conflictFound || conflictWithOtherBookings;\n  };\n  const timeToMinutes = timeStr => {\n    if (!timeStr) return 0;\n\n    // This helper now assumes the input `timeStr` is already in \"H:MMam/pm\" format\n    const timePart = timeStr.split(/(am|pm)/i)[0];\n    const period = timeStr.toLowerCase().includes(\"pm\") ? \"pm\" : \"am\";\n    const [hours, minutes] = timePart.split(\":\").map(Number);\n    let total = hours * 60 + minutes;\n    if (period === \"pm\" && hours !== 12) total += 12 * 60;\n    if (period === \"am\" && hours === 12) total -= 12 * 60;\n    return total;\n  };\n  const saveEdit = () => {\n    if (!newStartTime || !newEndTime) {\n      setStatusType(\"error\");\n      setStatusMsg(\"Please select both start and end time.\");\n      return;\n    }\n    const startMin = timeToMinutes(newStartTime);\n    const endMin = timeToMinutes(newEndTime);\n    if (startMin >= endMin) {\n      setStatusType(\"error\");\n      setStatusMsg(\"End time must be after start time.\");\n      return;\n    }\n\n    // Pass the actual booking object's date and room for backend check\n    const payload = {\n      id: editingId,\n      newTime: newStartTime,\n      // Send in the format the backend expects (e.g., \"8:00am\")\n      newEndTime: newEndTime,\n      // Send in the format the backend expects\n      date: selectedBooking.date,\n      // Pass original booking date\n      room: selectedBooking.room,\n      // Pass original booking room\n      userEmail: user.email // Pass user email for backend validation\n    };\n\n    // Frontend validation before sending to backend\n    if (isRangeBooked(newStartTime, newEndTime, editingId)) {\n      setStatusType(\"error\");\n      setStatusMsg(\"Selected time slot conflicts with an existing booking.\");\n      return;\n    }\n    axios.post(`${API_URL}/api/booking/edit`, payload).then(() => {\n      setStatusType(\"success\");\n      setStatusMsg(\"Booking updated successfully! Pending Admin Approval.\");\n      setEditingId(null);\n      setNewStartTime(\"\");\n      setNewEndTime(\"\");\n      setSelectedBooking(null); // Clear selected booking\n      fetchBookings(); // Re-fetch all bookings\n    }).catch(error => {\n      console.error(\"Failed to edit booking:\", error);\n      setStatusType(\"error\");\n      // Check if the error response has a specific message from backend\n      if (error.response && error.response.data && error.response.data.error) {\n        setStatusMsg(error.response.data.error);\n      } else {\n        setStatusMsg(\"Failed to edit booking. Please try again.\");\n      }\n    });\n  };\n  const formatDate = isoDate => {\n    const date = new Date(isoDate);\n    // Ensure the date is interpreted as local time or explicitly convert\n    // For consistency, often best to parse as UTC and then display as local\n    const options = {\n      weekday: \"short\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    return date.toLocaleDateString(\"en-US\", options);\n  };\n\n  // This function formats time from your 'hours' array (e.g., '8:00am') to display\n  const formatTime = timeStr => {\n    if (!timeStr) return \"\";\n    // Assuming timeStr is already in \"H:MMam/pm\" format from the `hours` array or `formatTimeForDisplay`\n    // Ensure consistent casing for AM/PM if needed, e.g., \"8:00AM\" vs \"8:00am\"\n    const [time, period] = timeStr.split(/(am|pm)/i);\n    return `${time}${(period === null || period === void 0 ? void 0 : period.toUpperCase()) || ''}`; // Ensure uppercase AM/PM\n  };\n  const handleLogout = () => {\n    setUser(null); // Clear user from context\n    localStorage.removeItem(\"authToken\"); // Remove token if used\n    navigate(\"/login\");\n  };\n\n  // Helper function to render booking cards\n  const renderBookingCards = bookingsToRender => {\n    return bookingsToRender.map(b => /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"bg-white rounded-xl shadow-sm overflow-hidden\",\n      whileHover: {\n        y: -2\n      },\n      transition: {\n        type: \"spring\",\n        stiffness: 300\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 bg-blue-50 rounded-lg mr-4 text-blue-600\",\n              children: /*#__PURE__*/_jsxDEV(FiClock, {\n                className: \"text-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-800\",\n                children: b.room\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600 mt-1\",\n                children: [formatDate(b.date), \" \\u2022 \", formatTimeForDisplay(b.time), \" -\", \" \", formatTimeForDisplay(b.end_time)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `px-3 py-1 rounded-full text-xs font-medium ${b.status === \"approved\" ? \"bg-green-100 text-green-800\" : b.status === \"cancelled\" ? \"bg-red-100 text-red-800\" : \"bg-yellow-100 text-yellow-800\"}`,\n            children: b.status.charAt(0).toUpperCase() + b.status.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), editingId === b.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"w-full border border-gray-300 rounded-lg px-4 py-2 focus:border-blue-500 focus:ring-blue-500\",\n                value: newStartTime,\n                onChange: e => {\n                  setNewStartTime(e.target.value);\n                  setNewEndTime(\"\"); // Reset end time when start time changes\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select start time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 21\n                }, this), hours.map(h => {\n                  // isDisabled checks if this hour slot (h) is part of a booked range *not* including the current booking\n                  const isBooked = bookedSlots.includes(h);\n                  const isCurrentStart = h === formatTimeForDisplay(b.time);\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: h,\n                    disabled: isBooked && !isCurrentStart // Disable if booked and not the current booking's start\n                    ,\n                    className: isBooked && !isCurrentStart ? \"text-gray-400\" : \"\",\n                    children: [formatTime(h), isBooked && !isCurrentStart && \" (Booked)\"]\n                  }, h, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"w-full border border-gray-300 rounded-lg px-4 py-2 focus:border-blue-500 focus:ring-blue-500\",\n                value: newEndTime,\n                onChange: e => setNewEndTime(e.target.value),\n                disabled: !newStartTime,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select end time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 21\n                }, this), hours.map((h, index) => {\n                  const startTimeIndex = hours.indexOf(newStartTime);\n                  const isAfterStart = startTimeIndex !== -1 && index > startTimeIndex;\n                  if (!isAfterStart) return null; // Only show times after the selected start time\n\n                  const isCurrentEnd = h === formatTimeForDisplay(b.end_time);\n\n                  // Check if the _entire range_ from newStartTime to h is available\n                  const potentialNewRange = hours.slice(startTimeIndex, index + 1); // +1 because slice end is exclusive\n                  const isRangeAvailable = potentialNewRange.every(slot => {\n                    const isSlotBooked = bookedSlots.includes(slot);\n                    const isSlotCurrentBooking = slot === formatTimeForDisplay(b.time) || slot === formatTimeForDisplay(b.end_time) || timeToMinutes(slot) > timeToMinutes(formatTimeForDisplay(b.time)) && timeToMinutes(slot) < timeToMinutes(formatTimeForDisplay(b.end_time));\n                    return !isSlotBooked || isSlotCurrentBooking;\n                  });\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: h,\n                    disabled: !isRangeAvailable && !isCurrentEnd // Disable if any part of the new range is unavailable AND it's not the current booking's end time\n                    ,\n                    className: !isRangeAvailable && !isCurrentEnd ? \"text-gray-400\" : \"\",\n                    children: [formatTime(h), !isRangeAvailable && !isCurrentEnd && \" (Unavailable)\"]\n                  }, h, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), isLoadingSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-sm text-gray-500\",\n            children: \"Loading available times...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 17\n          }, this), slotError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-sm text-red-500\",\n            children: slotError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 flex justify-end space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditingId(null),\n              className: \"px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: saveEdit,\n              className: \"px-4 py-2 bg-blue-600 rounded-lg text-sm font-medium text-white hover:bg-blue-700 transition-colors flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(FiCheckCircle, {\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 19\n              }, this), \"Save Changes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 flex justify-end space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(b),\n            className: `px-4 py-2 rounded-lg text-sm font-medium flex items-center ${\n            // Disable if approved OR if the booking's end time is in the past\n            b.status === \"approved\" || new Date(`${b.date}T${time24hrToIso(b.end_time)}`) <= new Date() ? \"bg-gray-300 text-gray cursor-not-allowed\" : \"bg-blue-600 text-white hover:bg-blue-700\"} transition-colors`,\n            disabled: b.status === \"approved\" || new Date(`${b.date}T${time24hrToIso(b.end_time)}`) <= new Date(),\n            children: [/*#__PURE__*/_jsxDEV(FiEdit2, {\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this), \"Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCancel(b.id),\n            className: `px-4 py-2 rounded-lg text-sm font-medium text-white flex items-center ${b.status === \"cancelled\" ? \"bg-gray-300 cursor-not-allowed\" : \"bg-red-600 hover:bg-red-700\"} transition-colors`,\n            disabled: b.status === \"cancelled\",\n            children: [/*#__PURE__*/_jsxDEV(FiX, {\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this), \"Cancel Booking\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)\n    }, b.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen bg-gray-50 font-poppins\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 bg-gradient-to-b from-green-700 to-green-600 shadow-xl hidden md:flex flex-col p-6 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-1\",\n          children: \"MeetingHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-green-100 text-sm\",\n          children: \"User Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"flex-1 space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard-user\",\n          className: \"flex items-center p-3 text-green-100 hover:bg-green-800 rounded-lg transition-all\",\n          children: [/*#__PURE__*/_jsxDEV(FiHome, {\n            className: \"mr-3 text-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/my-bookings\",\n          className: \"flex items-center p-3 text-white bg-green-800 rounded-lg transition-all hover:bg-green-900\",\n          children: [/*#__PURE__*/_jsxDEV(FiBookOpen, {\n            className: \"mr-3 text-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"My Bookings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/calendar\",\n          className: \"flex items-center p-3 text-green-100 hover:bg-green-800 rounded-lg transition-all\",\n          children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n            className: \"mr-3 text-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"New Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-auto pt-4 border-t border-green-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-4 p-3 bg-green-800 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-green-600 rounded-full mr-3\",\n            children: /*#__PURE__*/_jsxDEV(FiUser, {\n              className: \"text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm font-medium\",\n              children: (user === null || user === void 0 ? void 0 : user.name) || \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-green-200\",\n              children: (user === null || user === void 0 ? void 0 : user.email) || \"user@example.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"flex items-center w-full p-3 text-green-100 hover:bg-green-800 rounded-lg transition-all mt-2\",\n          onClick: handleLogout,\n          children: [/*#__PURE__*/_jsxDEV(FiLogOut, {\n            className: \"mr-3 text-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"bg-white shadow-sm p-6 mb-6 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-800\",\n          children: \"My Bookings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"View and manage your active and upcoming bookings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this), statusMsg && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: -20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: `mb-6 p-4 rounded-lg ${statusType === \"success\" ? \"bg-green-100 text-green-800 border border-green-200\" : \"bg-red-100 text-red-800 border border-red-200\"}`,\n        children: statusMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 11\n      }, this), bookings.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-sm p-8 text-center max-w-2xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-auto h-16 w-16 text-gray-400 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(FiCalendar, {\n            className: \"w-full h-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900\",\n          children: \"No bookings yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-gray-500 mb-6\",\n          children: \"You haven't made any bookings yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/calendar\",\n          className: \"inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this), \"Book a Room\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8 max-w-4xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-800 mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(FiChevronRight, {\n              className: \"text-green-600 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 17\n            }, this), \" Upcoming Bookings (\", upcomingBookings.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 15\n          }, this), upcomingBookings.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: renderBookingCards(upcomingBookings)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-sm p-6 text-center text-gray-500\",\n            children: \"No upcoming bookings.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-800 mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(FiChevronRight, {\n              className: \"text-blue-600 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 17\n            }, this), \" Past Bookings (\", pastBookings.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, this), pastBookings.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: renderBookingCards(pastBookings)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-sm p-6 text-center text-gray-500\",\n            children: \"No past bookings.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 529,\n    columnNumber: 5\n  }, this);\n}\n_s(MyBookings, \"Hww4yMkr7wcrj6mzc0cdxpfBwXI=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = MyBookings;\nvar _c;\n$RefreshReg$(_c, \"MyBookings\");","map":{"version":3,"names":["React","useEffect","useState","axios","useAuth","Link","FiCalendar","FiBookOpen","FiHome","FiLogOut","FiUser","FiClock","FiCheckCircle","FiXCircle","FiEdit2","FiX","FiChevronRight","FiPlus","motion","useNavigate","jsxDEV","_jsxDEV","MyBookings","_s","user","setUser","bookings","setBookings","upcomingBookings","setUpcomingBookings","pastBookings","setPastBookings","statusMsg","setStatusMsg","statusType","setStatusType","editingId","setEditingId","newStartTime","setNewStartTime","newEndTime","setNewEndTime","bookedSlots","setBookedSlots","selectedBooking","setSelectedBooking","isLoadingSlots","setIsLoadingSlots","slotError","setSlotError","navigate","API_URL","process","env","REACT_APP_API_URL","hours","email","fetchBookings","get","then","res","allBookings","data","now","Date","upcoming","past","forEach","booking","bookingEndDateTime","date","time24hrToIso","end_time","push","sort","a","b","dateA","time","dateB","catch","error","console","timeAmPmTo24hr","timeAmPm","period","split","minutes","map","Number","lowerPeriod","toLowerCase","String","padStart","time24hr","slice","fetchBookedSlots","room","finally","formatTimeForDisplay","time24","hourStr","minuteStr","hour","parseInt","handleCancel","id","post","handleEdit","status","isRangeBooked","start","end","currentBookingId","startIndex","indexOf","endIndex","newRequestedSlots","conflictFound","some","existingBookingStart","existingBookingEnd","existingStartIndex","existingEndIndex","warn","existingOccupiedSlots","slot","includes","conflictWithOtherBookings","timeToMinutes","timeStr","timePart","total","saveEdit","startMin","endMin","payload","newTime","userEmail","response","formatDate","isoDate","options","weekday","month","day","toLocaleDateString","formatTime","toUpperCase","handleLogout","localStorage","removeItem","renderBookingCards","bookingsToRender","div","className","whileHover","y","transition","type","stiffness","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","value","onChange","e","target","h","isBooked","isCurrentStart","disabled","index","startTimeIndex","isAfterStart","isCurrentEnd","potentialNewRange","isRangeAvailable","every","isSlotBooked","isSlotCurrentBooking","onClick","to","name","initial","opacity","animate","length","_c","$RefreshReg$"],"sources":["C:/Users/ecah1/meeting-room-booking/frontend/src/pages/MyBookings.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  FiCalendar,\r\n  FiBookOpen,\r\n  FiHome,\r\n  FiLogOut,\r\n  FiUser,\r\n  FiClock,\r\n  FiCheckCircle,\r\n  FiXCircle,\r\n  FiEdit2,\r\n  FiX,\r\n  FiChevronRight,\r\n  FiPlus,\r\n} from \"react-icons/fi\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function MyBookings() {\r\n  const { user, setUser } = useAuth(); // Added setUser for logout\r\n  const [bookings, setBookings] = useState([]);\r\n  const [upcomingBookings, setUpcomingBookings] = useState([]);\r\n  const [pastBookings, setPastBookings] = useState([]);\r\n  const [statusMsg, setStatusMsg] = useState(\"\");\r\n  const [statusType, setStatusType] = useState(\"\"); // \"success\" | \"error\"\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [newStartTime, setNewStartTime] = useState(\"\");\r\n  const [newEndTime, setNewEndTime] = useState(\"\");\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n  const [isLoadingSlots, setIsLoadingSlots] = useState(false);\r\n  const [slotError, setSlotError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL;\r\n\r\n  // Standard business hours (ensure these match your backend's format or are convertible)\r\n  const hours = [\r\n    \"8:00am\",\r\n    \"9:00am\",\r\n    \"10:00am\",\r\n    \"11:00am\",\r\n    \"12:00pm\",\r\n    \"1:00pm\",\r\n    \"2:00pm\",\r\n    \"3:00pm\",\r\n    \"4:00pm\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (user?.email) fetchBookings();\r\n  }, [user]);\r\n\r\n  const fetchBookings = () => {\r\n    axios\r\n      .get(`${API_URL}/api/booking/user-bookings?email=${user.email}`)\r\n      .then((res) => {\r\n        const allBookings = res.data;\r\n        const now = new Date(); // Current date and time (e.g., June 22, 2025, 10:16 PM)\r\n\r\n        const upcoming = [];\r\n        const past = [];\r\n\r\n        allBookings.forEach((booking) => {\r\n          // IMPORTANT: Construct Date objects with both date AND time for accurate comparison\r\n          // Assuming booking.date is 'YYYY-MM-DD' and booking.end_time is 'HH:MM' (24-hour format from backend)\r\n          const bookingEndDateTime = new Date(`${booking.date}T${time24hrToIso(booking.end_time)}`);\r\n\r\n          // Compare the booking's end time with the current time\r\n          if (bookingEndDateTime > now) { // If the booking's end time is in the future\r\n            upcoming.push(booking);\r\n          } else { // If the booking's end time is in the past or exactly now\r\n            past.push(booking);\r\n          }\r\n        });\r\n\r\n        // Sort upcoming bookings by date and time ascending\r\n        upcoming.sort((a, b) => {\r\n          const dateA = new Date(`${a.date}T${time24hrToIso(a.time)}`);\r\n          const dateB = new Date(`${b.date}T${time24hrToIso(b.time)}`);\r\n          return dateA - dateB;\r\n        });\r\n\r\n        // Sort past bookings by date and time descending\r\n        past.sort((a, b) => {\r\n          const dateA = new Date(`${a.date}T${time24hrToIso(a.time)}`);\r\n          const dateB = new Date(`${b.date}T${time24hrToIso(b.time)}`);\r\n          return dateB - dateA;\r\n        });\r\n\r\n        setBookings(allBookings); // Keep all bookings for edit/cancel logic\r\n        setUpcomingBookings(upcoming);\r\n        setPastBookings(past);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to load bookings:\", error);\r\n        setStatusType(\"error\");\r\n        setStatusMsg(\"Failed to load bookings.\");\r\n      });\r\n  };\r\n\r\n  // Helper to convert 'HH:MM AM/PM' to 'HH:MM:00' (24-hour) for Date constructor\r\n  const timeAmPmTo24hr = (timeAmPm) => {\r\n    if (!timeAmPm) return \"00:00:00\";\r\n    const [time, period] = timeAmPm.split(/(am|pm)/i);\r\n    let [hours, minutes] = time.split(\":\").map(Number);\r\n    const lowerPeriod = period?.toLowerCase();\r\n\r\n    if (lowerPeriod === \"pm\" && hours !== 12) {\r\n        hours += 12;\r\n    } else if (lowerPeriod === \"am\" && hours === 12) {\r\n        hours = 0; // 12 AM is 00 hours\r\n    }\r\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:00`;\r\n  };\r\n\r\n  // Helper to convert 'HH:MM:SS' (from DB) to 'HH:MM' for Date constructor\r\n  // Or directly to HH:MM if DB is already HH:MM\r\n  const time24hrToIso = (time24hr) => {\r\n    if (!time24hr) return \"00:00\";\r\n    // Assuming backend time is HH:MM:SS or HH:MM. We need HH:MM for Date constructor with T\r\n    return time24hr.slice(0, 5); // Take first 5 chars \"HH:MM\"\r\n  }\r\n\r\n\r\n  const fetchBookedSlots = (date, room) => {\r\n    setIsLoadingSlots(true);\r\n    setSlotError(null);\r\n    axios\r\n      .get(`${API_URL}/api/booking/slots?date=${date}&room=${room}`)\r\n      .then((res) => {\r\n        // The backend `getSlotRange` returns slots like \"8:00am\", \"9:00am\".\r\n        // Ensure this matches the `hours` array directly.\r\n        setBookedSlots(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to load booked time slots:\", error);\r\n        setBookedSlots([]);\r\n        setSlotError(\"Failed to load booked time slots\");\r\n      })\r\n      .finally(() => setIsLoadingSlots(false));\r\n  };\r\n\r\n  // This function converts DB's 24-hour time to your display format (e.g., \"8:00am\")\r\n  const formatTimeForDisplay = (time24) => {\r\n    if (!time24) return \"\";\r\n    const [hourStr, minuteStr] = time24.split(\":\");\r\n    let hour = parseInt(hourStr, 10);\r\n    const period = hour >= 12 ? \"pm\" : \"am\";\r\n    hour = hour % 12;\r\n    hour = hour === 0 ? 12 : hour; // Convert 0 (midnight) to 12 AM\r\n    return `${hour}:${minuteStr}${period}`;\r\n  };\r\n\r\n  const handleCancel = (id) => {\r\n    axios\r\n      .post(`${API_URL}/api/booking/cancel`, { id, email: user.email })\r\n      .then(() => {\r\n        setStatusType(\"success\");\r\n        setStatusMsg(\"Booking cancelled successfully!\");\r\n        fetchBookings();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to cancel booking:\", error);\r\n        setStatusType(\"error\");\r\n        setStatusMsg(\"Failed to cancel booking.\");\r\n      });\r\n  };\r\n\r\n  const handleEdit = (booking) => {\r\n    // Check if the booking's end time has already passed\r\n    const bookingEndDateTime = new Date(`${booking.date}T${time24hrToIso(booking.end_time)}`);\r\n    const now = new Date();\r\n    if (bookingEndDateTime <= now) {\r\n      setStatusType(\"error\");\r\n      setStatusMsg(\"Past bookings cannot be edited.\");\r\n      return;\r\n    }\r\n\r\n    if (booking.status === \"approved\") {\r\n      setStatusType(\"error\");\r\n      setStatusMsg(\"Approved bookings cannot be edited.\");\r\n      return;\r\n    }\r\n\r\n    setEditingId(booking.id);\r\n    setNewStartTime(formatTimeForDisplay(booking.time));\r\n    setNewEndTime(formatTimeForDisplay(booking.end_time));\r\n    setSelectedBooking(booking);\r\n\r\n    // Always fetch booked slots for the chosen date and room when editing\r\n    fetchBookedSlots(booking.date, booking.room);\r\n  };\r\n\r\n  const isRangeBooked = (start, end, currentBookingId) => {\r\n    const startIndex = hours.indexOf(start);\r\n    const endIndex = hours.indexOf(end);\r\n\r\n    if (startIndex === -1 || endIndex === -1 || startIndex >= endIndex) {\r\n      return true; // Invalid range, consider it booked to prevent errors\r\n    }\r\n\r\n    // Get all slots covered by the *new* requested range\r\n    const newRequestedSlots = hours.slice(startIndex, endIndex); // Exclusive end for slots\r\n\r\n    // Now, iterate through ALL current user's bookings (except the one being edited)\r\n    // to check for conflicts, regardless of their status (pending/approved)\r\n    const conflictFound = bookings.some((booking) => {\r\n      // Exclude the current booking being edited\r\n      if (booking.id === currentBookingId) return false;\r\n\r\n      // Only check against bookings for the same room and date that are NOT cancelled\r\n      if (\r\n        booking.room !== selectedBooking.room ||\r\n        booking.date !== selectedBooking.date ||\r\n        booking.status === \"cancelled\"\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Convert backend 24-hour times to your `hours` array format for comparison\r\n      const existingBookingStart = formatTimeForDisplay(booking.time);\r\n      const existingBookingEnd = formatTimeForDisplay(booking.end_time);\r\n\r\n      const existingStartIndex = hours.indexOf(existingBookingStart);\r\n      const existingEndIndex = hours.indexOf(existingBookingEnd);\r\n\r\n      if (existingStartIndex === -1 || existingEndIndex === -1) {\r\n          console.warn(\"Invalid existing booking time format:\", booking.time, booking.end_time);\r\n          return false; // Skip if existing booking times are malformed\r\n      }\r\n\r\n      const existingOccupiedSlots = hours.slice(existingStartIndex, existingEndIndex);\r\n\r\n      // Check if any slot in the new requested range overlaps with existing occupied slots\r\n      return newRequestedSlots.some(slot => existingOccupiedSlots.includes(slot));\r\n    });\r\n\r\n    // Additionally, check against the `bookedSlots` fetched from the backend,\r\n    // which represent all booked slots for that room and date (regardless of user).\r\n    // This is crucial for preventing conflicts with other users' bookings.\r\n    const conflictWithOtherBookings = newRequestedSlots.some(slot => bookedSlots.includes(slot));\r\n\r\n    return conflictFound || conflictWithOtherBookings;\r\n  };\r\n\r\n\r\n  const timeToMinutes = (timeStr) => {\r\n    if (!timeStr) return 0;\r\n\r\n    // This helper now assumes the input `timeStr` is already in \"H:MMam/pm\" format\r\n    const timePart = timeStr.split(/(am|pm)/i)[0];\r\n    const period = timeStr.toLowerCase().includes(\"pm\") ? \"pm\" : \"am\";\r\n\r\n    const [hours, minutes] = timePart.split(\":\").map(Number);\r\n    let total = hours * 60 + minutes;\r\n    if (period === \"pm\" && hours !== 12) total += 12 * 60;\r\n    if (period === \"am\" && hours === 12) total -= 12 * 60;\r\n    return total;\r\n  };\r\n\r\n  const saveEdit = () => {\r\n    if (!newStartTime || !newEndTime) {\r\n      setStatusType(\"error\");\r\n      setStatusMsg(\"Please select both start and end time.\");\r\n      return;\r\n    }\r\n\r\n    const startMin = timeToMinutes(newStartTime);\r\n    const endMin = timeToMinutes(newEndTime);\r\n\r\n    if (startMin >= endMin) {\r\n      setStatusType(\"error\");\r\n      setStatusMsg(\"End time must be after start time.\");\r\n      return;\r\n    }\r\n\r\n    // Pass the actual booking object's date and room for backend check\r\n    const payload = {\r\n      id: editingId,\r\n      newTime: newStartTime, // Send in the format the backend expects (e.g., \"8:00am\")\r\n      newEndTime: newEndTime, // Send in the format the backend expects\r\n      date: selectedBooking.date, // Pass original booking date\r\n      room: selectedBooking.room, // Pass original booking room\r\n      userEmail: user.email, // Pass user email for backend validation\r\n    };\r\n\r\n    // Frontend validation before sending to backend\r\n    if (isRangeBooked(newStartTime, newEndTime, editingId)) {\r\n      setStatusType(\"error\");\r\n      setStatusMsg(\"Selected time slot conflicts with an existing booking.\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(`${API_URL}/api/booking/edit`, payload)\r\n      .then(() => {\r\n        setStatusType(\"success\");\r\n        setStatusMsg(\"Booking updated successfully! Pending Admin Approval.\");\r\n        setEditingId(null);\r\n        setNewStartTime(\"\");\r\n        setNewEndTime(\"\");\r\n        setSelectedBooking(null); // Clear selected booking\r\n        fetchBookings(); // Re-fetch all bookings\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to edit booking:\", error);\r\n        setStatusType(\"error\");\r\n        // Check if the error response has a specific message from backend\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n            setStatusMsg(error.response.data.error);\r\n        } else {\r\n            setStatusMsg(\"Failed to edit booking. Please try again.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const formatDate = (isoDate) => {\r\n    const date = new Date(isoDate);\r\n    // Ensure the date is interpreted as local time or explicitly convert\r\n    // For consistency, often best to parse as UTC and then display as local\r\n    const options = { weekday: \"short\", month: \"short\", day: \"numeric\" };\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n\r\n  // This function formats time from your 'hours' array (e.g., '8:00am') to display\r\n  const formatTime = (timeStr) => {\r\n    if (!timeStr) return \"\";\r\n    // Assuming timeStr is already in \"H:MMam/pm\" format from the `hours` array or `formatTimeForDisplay`\r\n    // Ensure consistent casing for AM/PM if needed, e.g., \"8:00AM\" vs \"8:00am\"\r\n    const [time, period] = timeStr.split(/(am|pm)/i);\r\n    return `${time}${period?.toUpperCase() || ''}`; // Ensure uppercase AM/PM\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUser(null); // Clear user from context\r\n    localStorage.removeItem(\"authToken\"); // Remove token if used\r\n    navigate(\"/login\");\r\n  };\r\n\r\n\r\n  // Helper function to render booking cards\r\n  const renderBookingCards = (bookingsToRender) => {\r\n    return bookingsToRender.map((b) => (\r\n      <motion.div\r\n        key={b.id}\r\n        className=\"bg-white rounded-xl shadow-sm overflow-hidden\"\r\n        whileHover={{ y: -2 }}\r\n        transition={{ type: \"spring\", stiffness: 300 }}\r\n      >\r\n        <div className=\"p-6\">\r\n          <div className=\"flex justify-between items-start\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"p-3 bg-blue-50 rounded-lg mr-4 text-blue-600\">\r\n                <FiClock className=\"text-lg\" />\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-lg font-semibold text-gray-800\">\r\n                  {b.room}\r\n                </h3>\r\n                <p className=\"text-gray-600 mt-1\">\r\n                  {formatDate(b.date)} • {formatTimeForDisplay(b.time)} -{\" \"}\r\n                  {formatTimeForDisplay(b.end_time)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <span\r\n              className={`px-3 py-1 rounded-full text-xs font-medium ${\r\n                b.status === \"approved\"\r\n                  ? \"bg-green-100 text-green-800\"\r\n                  : b.status === \"cancelled\"\r\n                  ? \"bg-red-100 text-red-800\"\r\n                  : \"bg-yellow-100 text-yellow-800\"\r\n              }`}\r\n            >\r\n              {b.status.charAt(0).toUpperCase() + b.status.slice(1)}\r\n            </span>\r\n          </div>\r\n\r\n          {editingId === b.id ? (\r\n            <div className=\"mt-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Start Time\r\n                  </label>\r\n                  <select\r\n                    className=\"w-full border border-gray-300 rounded-lg px-4 py-2 focus:border-blue-500 focus:ring-blue-500\"\r\n                    value={newStartTime}\r\n                    onChange={(e) => {\r\n                      setNewStartTime(e.target.value);\r\n                      setNewEndTime(\"\"); // Reset end time when start time changes\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select start time</option>\r\n                    {hours.map((h) => {\r\n                      // isDisabled checks if this hour slot (h) is part of a booked range *not* including the current booking\r\n                      const isBooked = bookedSlots.includes(h);\r\n                      const isCurrentStart = h === formatTimeForDisplay(b.time);\r\n\r\n                      return (\r\n                        <option\r\n                          key={h}\r\n                          value={h}\r\n                          disabled={isBooked && !isCurrentStart} // Disable if booked and not the current booking's start\r\n                          className={\r\n                            isBooked && !isCurrentStart\r\n                              ? \"text-gray-400\"\r\n                              : \"\"\r\n                          }\r\n                        >\r\n                          {formatTime(h)}\r\n                          {isBooked && !isCurrentStart && \" (Booked)\"}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    End Time\r\n                  </label>\r\n                  <select\r\n                    className=\"w-full border border-gray-300 rounded-lg px-4 py-2 focus:border-blue-500 focus:ring-blue-500\"\r\n                    value={newEndTime}\r\n                    onChange={(e) => setNewEndTime(e.target.value)}\r\n                    disabled={!newStartTime}\r\n                  >\r\n                    <option value=\"\">Select end time</option>\r\n                    {hours.map((h, index) => {\r\n                      const startTimeIndex = hours.indexOf(newStartTime);\r\n                      const isAfterStart = startTimeIndex !== -1 && index > startTimeIndex;\r\n                      if (!isAfterStart) return null; // Only show times after the selected start time\r\n\r\n                      const isCurrentEnd = h === formatTimeForDisplay(b.end_time);\r\n\r\n                      // Check if the _entire range_ from newStartTime to h is available\r\n                      const potentialNewRange = hours.slice(startTimeIndex, index + 1); // +1 because slice end is exclusive\r\n                      const isRangeAvailable = potentialNewRange.every(slot => {\r\n                          const isSlotBooked = bookedSlots.includes(slot);\r\n                          const isSlotCurrentBooking = (slot === formatTimeForDisplay(b.time) || slot === formatTimeForDisplay(b.end_time) || (timeToMinutes(slot) > timeToMinutes(formatTimeForDisplay(b.time)) && timeToMinutes(slot) < timeToMinutes(formatTimeForDisplay(b.end_time))));\r\n                          return !isSlotBooked || isSlotCurrentBooking;\r\n                      });\r\n\r\n                      return (\r\n                        <option\r\n                          key={h}\r\n                          value={h}\r\n                          disabled={!isRangeAvailable && !isCurrentEnd} // Disable if any part of the new range is unavailable AND it's not the current booking's end time\r\n                          className={\r\n                            (!isRangeAvailable && !isCurrentEnd)\r\n                              ? \"text-gray-400\"\r\n                              : \"\"\r\n                          }\r\n                        >\r\n                          {formatTime(h)}\r\n                          {(!isRangeAvailable && !isCurrentEnd) && \" (Unavailable)\"}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              {isLoadingSlots && (\r\n                <div className=\"mt-2 text-sm text-gray-500\">\r\n                  Loading available times...\r\n                </div>\r\n              )}\r\n              {slotError && (\r\n                <div className=\"mt-2 text-sm text-red-500\">{slotError}</div>\r\n              )}\r\n\r\n              <div className=\"mt-4 flex justify-end space-x-3\">\r\n                <button\r\n                  onClick={() => setEditingId(null)}\r\n                  className=\"px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={saveEdit}\r\n                  className=\"px-4 py-2 bg-blue-600 rounded-lg text-sm font-medium text-white hover:bg-blue-700 transition-colors flex items-center\"\r\n                >\r\n                  <FiCheckCircle className=\"mr-2\" />\r\n                  Save Changes\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"mt-4 flex justify-end space-x-3\">\r\n              <button\r\n                onClick={() => handleEdit(b)}\r\n                className={`px-4 py-2 rounded-lg text-sm font-medium flex items-center ${\r\n                  // Disable if approved OR if the booking's end time is in the past\r\n                  b.status === \"approved\" || new Date(`${b.date}T${time24hrToIso(b.end_time)}`) <= new Date()\r\n                    ? \"bg-gray-300 text-gray cursor-not-allowed\"\r\n                    : \"bg-blue-600 text-white hover:bg-blue-700\"\r\n                } transition-colors`}\r\n                disabled={b.status === \"approved\" || new Date(`${b.date}T${time24hrToIso(b.end_time)}`) <= new Date()}\r\n              >\r\n                <FiEdit2 className=\"mr-2\" />\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => handleCancel(b.id)}\r\n                className={`px-4 py-2 rounded-lg text-sm font-medium text-white flex items-center ${\r\n                  b.status === \"cancelled\"\r\n                    ? \"bg-gray-300 cursor-not-allowed\"\r\n                    : \"bg-red-600 hover:bg-red-700\"\r\n                } transition-colors`}\r\n                disabled={b.status === \"cancelled\"}\r\n              >\r\n                <FiX className=\"mr-2\" />\r\n                Cancel Booking\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </motion.div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen bg-gray-50 font-poppins\">\r\n      {/* Sidebar */}\r\n      <div className=\"w-64 bg-gradient-to-b from-green-700 to-green-600 shadow-xl hidden md:flex flex-col p-6 text-white\">\r\n        <div className=\"mb-10\">\r\n          <h2 className=\"text-2xl font-bold mb-1\">MeetingHub</h2>\r\n          <p className=\"text-green-100 text-sm\">User Dashboard</p>\r\n        </div>\r\n\r\n        <nav className=\"flex-1 space-y-2\">\r\n          <Link\r\n            to=\"/dashboard-user\"\r\n            className=\"flex items-center p-3 text-green-100 hover:bg-green-800 rounded-lg transition-all\"\r\n          >\r\n            <FiHome className=\"mr-3 text-lg\" />\r\n            <span>Dashboard</span>\r\n          </Link>\r\n          <Link\r\n            to=\"/my-bookings\"\r\n            className=\"flex items-center p-3 text-white bg-green-800 rounded-lg transition-all hover:bg-green-900\"\r\n          >\r\n            <FiBookOpen className=\"mr-3 text-lg\" />\r\n            <span>My Bookings</span>\r\n          </Link>\r\n          <Link\r\n            to=\"/calendar\"\r\n            className=\"flex items-center p-3 text-green-100 hover:bg-green-800 rounded-lg transition-all\"\r\n          >\r\n            <FiCalendar className=\"mr-3 text-lg\" />\r\n            <span>New Booking</span>\r\n          </Link>\r\n        </nav>\r\n\r\n        <div className=\"mt-auto pt-4 border-t border-green-800\">\r\n          <div className=\"flex items-center mb-4 p-3 bg-green-800 rounded-lg\">\r\n            <div className=\"p-2 bg-green-600 rounded-full mr-3\">\r\n              <FiUser className=\"text-white\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-medium\">{user?.name || \"User\"}</p>\r\n              <p className=\"text-xs text-green-200\">\r\n                {user?.email || \"user@example.com\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            className=\"flex items-center w-full p-3 text-green-100 hover:bg-green-800 rounded-lg transition-all mt-2\"\r\n            onClick={handleLogout}\r\n          >\r\n            <FiLogOut className=\"mr-3 text-lg\" />\r\n            <span>Logout</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 p-6\">\r\n        <header className=\"bg-white shadow-sm p-6 mb-6 rounded-lg\">\r\n          <h1 className=\"text-2xl font-bold text-gray-800\">My Bookings</h1>\r\n          <p className=\"text-gray-600\">\r\n            View and manage your active and upcoming bookings\r\n          </p>\r\n        </header>\r\n\r\n        {statusMsg && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            className={`mb-6 p-4 rounded-lg ${\r\n              statusType === \"success\"\r\n                ? \"bg-green-100 text-green-800 border border-green-200\"\r\n                : \"bg-red-100 text-red-800 border border-red-200\"\r\n            }`}\r\n          >\r\n            {statusMsg}\r\n          </motion.div>\r\n        )}\r\n\r\n        {bookings.length === 0 ? (\r\n          <div className=\"bg-white rounded-xl shadow-sm p-8 text-center max-w-2xl mx-auto\">\r\n            <div className=\"mx-auto h-16 w-16 text-gray-400 mb-4\">\r\n              <FiCalendar className=\"w-full h-full\" />\r\n            </div>\r\n            <h3 className=\"text-lg font-medium text-gray-900\">\r\n              No bookings yet\r\n            </h3>\r\n            <p className=\"mt-1 text-gray-500 mb-6\">\r\n              You haven't made any bookings yet.\r\n            </p>\r\n            <Link\r\n              to=\"/calendar\"\r\n              className=\"inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700 transition-colors\"\r\n            >\r\n              <FiPlus className=\"mr-2\" />\r\n              Book a Room\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-8 max-w-4xl\">\r\n            {/* Upcoming Bookings Section */}\r\n            <div>\r\n              <h2 className=\"text-xl font-bold text-gray-800 mb-4 flex items-center\">\r\n                <FiChevronRight className=\"text-green-600 mr-2\" /> Upcoming\r\n                Bookings ({upcomingBookings.length})\r\n              </h2>\r\n              {upcomingBookings.length > 0 ? (\r\n                <div className=\"space-y-4\">\r\n                  {renderBookingCards(upcomingBookings)}\r\n                </div>\r\n              ) : (\r\n                <div className=\"bg-white rounded-lg shadow-sm p-6 text-center text-gray-500\">\r\n                  No upcoming bookings.\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Past Bookings Section */}\r\n            <div>\r\n              <h2 className=\"text-xl font-bold text-gray-800 mb-4 flex items-center\">\r\n                <FiChevronRight className=\"text-blue-600 mr-2\" /> Past Bookings\r\n                ({pastBookings.length})\r\n              </h2>\r\n              {pastBookings.length > 0 ? (\r\n                <div className=\"space-y-4\">\r\n                  {renderBookingCards(pastBookings)}\r\n                </div>\r\n              ) : (\r\n                <div className=\"bg-white rounded-lg shadow-sm p-6 text-center text-gray-500\">\r\n                  No past bookings.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}